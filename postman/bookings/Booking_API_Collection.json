{
  "info": {
    "name": "Booking API Collection",
    "description": "A collection of API requests for testing booking-related endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentication",
      "description": "Endpoints for user authentication",
      "item": [
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "login"]
            },
            "description": "Login to get authentication token"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Bookings",
      "description": "Endpoints for booking operations",
      "item": [
        {
          "name": "Get All Bookings (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/bookings",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings"]
            },
            "description": "Get a list of all bookings (admin only)"
          },
          "response": []
        },
        {
          "name": "Get Bookings with Pagination (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/bookings?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get a paginated list of bookings (admin only)"
          },
          "response": []
        },
        {
          "name": "Get Booking by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/bookings/{{bookingId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings", "{{bookingId}}"]
            },
            "description": "Get details of a specific booking by ID"
          },
          "response": []
        },
        {
          "name": "Get My Bookings",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/bookings/my-bookings",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings", "my-bookings"]
            },
            "description": "Get all bookings for the authenticated user"
          },
          "response": []
        },
        {
          "name": "Get Bookings by User (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/bookings/user/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings", "user", "{{userId}}"]
            },
            "description": "Get all bookings for a specific user (admin only)"
          },
          "response": []
        },
        {
          "name": "Get Bookings by Movie",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/bookings/movie/{{movieId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings", "movie", "{{movieId}}"]
            },
            "description": "Get all bookings for a specific movie (admin only)"
          },
          "response": []
        },
        {
          "name": "Get Bookings by Screening",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/bookings/screening/{{screeningId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings", "screening", "{{screeningId}}"]
            },
            "description": "Get all bookings for a specific screening (admin only)"
          },
          "response": []
        },
        {
          "name": "Get Bookings by Date Range (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/bookings/date-range?startDate=2023-12-01&endDate=2023-12-31",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings", "date-range"],
              "query": [
                {
                  "key": "startDate",
                  "value": "2023-12-01"
                },
                {
                  "key": "endDate",
                  "value": "2023-12-31"
                }
              ]
            },
            "description": "Get all bookings within a date range (admin only)"
          },
          "response": []
        },
        {
          "name": "Create Booking",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"screeningId\": \"{{screeningId}}\",\n    \"seats\": [\"A1\", \"A2\"],\n    \"totalAmount\": 20,\n    \"paymentMethod\": \"credit_card\",\n    \"paymentDetails\": {\n        \"cardNumber\": \"**** **** **** 1234\",\n        \"cardHolder\": \"Test User\",\n        \"expiryDate\": \"12/25\"\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/bookings",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings"]
            },
            "description": "Create a new booking"
          },
          "response": []
        },
        {
          "name": "Update Booking Status (Admin)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"status\": \"confirmed\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/bookings/{{bookingId}}/status",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings", "{{bookingId}}", "status"]
            },
            "description": "Update the status of a booking (admin only)"
          },
          "response": []
        },
        {
          "name": "Cancel Booking",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/bookings/{{bookingId}}/cancel",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings", "{{bookingId}}", "cancel"]
            },
            "description": "Cancel a booking"
          },
          "response": []
        },
        {
          "name": "Request Refund",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"reason\": \"Changed plans\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/bookings/{{bookingId}}/refund",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings", "{{bookingId}}", "refund"]
            },
            "description": "Request a refund for a booking"
          },
          "response": []
        },
        {
          "name": "Process Refund (Admin)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"status\": \"approved\",\n    \"refundAmount\": 20,\n    \"notes\": \"Full refund approved\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/bookings/{{bookingId}}/refund/process",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings", "{{bookingId}}", "refund", "process"]
            },
            "description": "Process a refund request (admin only)"
          },
          "response": []
        },
        {
          "name": "Delete Booking (Admin)",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/bookings/{{bookingId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings", "{{bookingId}}"]
            },
            "description": "Delete a booking (admin only)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Booking Statistics",
      "description": "Endpoints for booking statistics",
      "item": [
        {
          "name": "Get Booking Statistics (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/bookings/statistics",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings", "statistics"]
            },
            "description": "Get overall booking statistics (admin only)"
          },
          "response": []
        },
        {
          "name": "Get Booking Statistics by Movie (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/bookings/statistics/movie/{{movieId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings", "statistics", "movie", "{{movieId}}"]
            },
            "description": "Get booking statistics for a specific movie (admin only)"
          },
          "response": []
        },
        {
          "name": "Get Booking Statistics by Date Range (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/bookings/statistics/date-range?startDate=2023-12-01&endDate=2023-12-31",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings", "statistics", "date-range"],
              "query": [
                {
                  "key": "startDate",
                  "value": "2023-12-01"
                },
                {
                  "key": "endDate",
                  "value": "2023-12-31"
                }
              ]
            },
            "description": "Get booking statistics for a specific date range (admin only)"
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Get today's date in YYYY-MM-DD format",
          "const today = new Date();",
          "const todayFormatted = today.toISOString().split('T')[0];",
          "",
          "// Format display date (e.g., \"December 25, 2023\")",
          "const options = { year: 'numeric', month: 'long', day: 'numeric' };",
          "const displayDate = today.toLocaleDateString('en-US', options);",
          "",
          "// Get day of week",
          "const daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];",
          "const dayOfWeek = daysOfWeek[today.getDay()];",
          "",
          "// Set environment variables",
          "pm.environment.set('date', todayFormatted);",
          "pm.environment.set('displayDate', displayDate);",
          "pm.environment.set('dayOfWeek', dayOfWeek);"
        ]
      }
    }
  ]
}
