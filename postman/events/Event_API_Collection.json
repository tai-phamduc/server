{
  "info": {
    "name": "Event API Collection",
    "description": "A collection of API requests for testing event-related endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentication",
      "description": "Endpoints for user authentication",
      "item": [
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "login"]
            },
            "description": "Login to get authentication token"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Events",
      "description": "Endpoints for event operations",
      "item": [
        {
          "name": "Get All Events",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/events",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events"]
            },
            "description": "Get a list of all events"
          },
          "response": []
        },
        {
          "name": "Get Events with Pagination",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/events?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get a paginated list of events"
          },
          "response": []
        },
        {
          "name": "Get Event by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/events/{{eventId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events", "{{eventId}}"]
            },
            "description": "Get details of a specific event by ID"
          },
          "response": []
        },
        {
          "name": "Get Upcoming Events",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/events/upcoming",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events", "upcoming"]
            },
            "description": "Get all upcoming events"
          },
          "response": []
        },
        {
          "name": "Get Past Events",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/events/past",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events", "past"]
            },
            "description": "Get all past events"
          },
          "response": []
        },
        {
          "name": "Get Events by Date Range",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/events/date-range?startDate={{date}}&endDate=2023-12-31",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events", "date-range"],
              "query": [
                {
                  "key": "startDate",
                  "value": "{{date}}"
                },
                {
                  "key": "endDate",
                  "value": "2023-12-31"
                }
              ]
            },
            "description": "Get all events within a date range"
          },
          "response": []
        },
        {
          "name": "Get Events by Category",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/events/category/Premiere",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events", "category", "Premiere"]
            },
            "description": "Get all events in a specific category"
          },
          "response": []
        },
        {
          "name": "Get Events by Location",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/events/location/{{city}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events", "location", "{{city}}"]
            },
            "description": "Get all events in a specific location"
          },
          "response": []
        },
        {
          "name": "Search Events",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/events/search?keyword=premiere",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events", "search"],
              "query": [
                {
                  "key": "keyword",
                  "value": "premiere"
                }
              ]
            },
            "description": "Search for events by keyword"
          },
          "response": []
        },
        {
          "name": "Create Event (Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Movie Premiere: Inception\",\n    \"description\": \"Join us for the premiere of Christopher Nolan's Inception, featuring a Q&A session with the cast.\",\n    \"category\": \"Premiere\",\n    \"startDate\": \"2023-12-15T19:00:00Z\",\n    \"endDate\": \"2023-12-15T23:00:00Z\",\n    \"location\": {\n        \"name\": \"AMC Empire 25\",\n        \"address\": \"234 W 42nd St, New York, NY 10036\",\n        \"city\": \"New York\",\n        \"state\": \"NY\",\n        \"country\": \"USA\",\n        \"coordinates\": {\n            \"latitude\": 40.7569,\n            \"longitude\": -73.9896\n        }\n    },\n    \"image\": \"https://example.com/inception-premiere.jpg\",\n    \"featuredImage\": \"https://example.com/inception-premiere-featured.jpg\",\n    \"gallery\": [\n        \"https://example.com/inception-premiere-1.jpg\",\n        \"https://example.com/inception-premiere-2.jpg\"\n    ],\n    \"movieId\": \"{{movieId}}\",\n    \"cinemaId\": \"{{cinemaId}}\",\n    \"capacity\": 200,\n    \"ticketPrice\": 50,\n    \"isPublic\": true,\n    \"isFeatured\": true,\n    \"status\": \"scheduled\",\n    \"tags\": [\"premiere\", \"q&a\", \"christopher nolan\"],\n    \"guests\": [\n        {\n            \"name\": \"Leonardo DiCaprio\",\n            \"role\": \"Actor\"\n        },\n        {\n            \"name\": \"Christopher Nolan\",\n            \"role\": \"Director\"\n        }\n    ],\n    \"organizer\": {\n        \"name\": \"Warner Bros. Pictures\",\n        \"contact\": \"events@warnerbros.com\",\n        \"website\": \"https://www.warnerbros.com\"\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/events",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events"]
            },
            "description": "Create a new event (admin only)"
          },
          "response": []
        },
        {
          "name": "Update Event (Admin)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Movie Premiere: Inception - Special Edition\",\n    \"description\": \"Join us for the premiere of Christopher Nolan's Inception, featuring a Q&A session with the cast and a special behind-the-scenes look.\",\n    \"startDate\": \"2023-12-15T18:30:00Z\",\n    \"endDate\": \"2023-12-15T23:30:00Z\",\n    \"capacity\": 250,\n    \"ticketPrice\": 60,\n    \"isPublic\": true,\n    \"isFeatured\": true,\n    \"status\": \"scheduled\",\n    \"tags\": [\"premiere\", \"q&a\", \"christopher nolan\", \"behind-the-scenes\"],\n    \"guests\": [\n        {\n            \"name\": \"Leonardo DiCaprio\",\n            \"role\": \"Actor\"\n        },\n        {\n            \"name\": \"Christopher Nolan\",\n            \"role\": \"Director\"\n        },\n        {\n            \"name\": \"Joseph Gordon-Levitt\",\n            \"role\": \"Actor\"\n        }\n    ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/events/{{eventId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events", "{{eventId}}"]
            },
            "description": "Update an existing event (admin only)"
          },
          "response": []
        },
        {
          "name": "Delete Event (Admin)",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/events/{{eventId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events", "{{eventId}}"]
            },
            "description": "Delete an event (admin only)"
          },
          "response": []
        },
        {
          "name": "Update Event Status (Admin)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"status\": \"cancelled\",\n    \"statusReason\": \"Cancelled due to unforeseen circumstances\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/events/{{eventId}}/status",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events", "{{eventId}}", "status"]
            },
            "description": "Update the status of an event (admin only)"
          },
          "response": []
        },
        {
          "name": "Update Event Featured Status (Admin)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"isFeatured\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/events/{{eventId}}/featured",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events", "{{eventId}}", "featured"]
            },
            "description": "Update the featured status of an event (admin only)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Event Registrations",
      "description": "Endpoints for event registration operations",
      "item": [
        {
          "name": "Get Event Registrations (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/events/{{eventId}}/registrations",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events", "{{eventId}}", "registrations"]
            },
            "description": "Get all registrations for a specific event (admin only)"
          },
          "response": []
        },
        {
          "name": "Get My Event Registrations",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/events/registrations/my-registrations",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events", "registrations", "my-registrations"]
            },
            "description": "Get all event registrations for the authenticated user"
          },
          "response": []
        },
        {
          "name": "Register for Event",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"numberOfTickets\": 2,\n    \"specialRequests\": \"Vegetarian food options\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/events/{{eventId}}/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events", "{{eventId}}", "register"]
            },
            "description": "Register for an event"
          },
          "response": []
        },
        {
          "name": "Cancel Registration",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/events/registrations/{{registrationId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events", "registrations", "{{registrationId}}"]
            },
            "description": "Cancel an event registration"
          },
          "response": []
        },
        {
          "name": "Update Registration (Admin)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"status\": \"confirmed\",\n    \"numberOfTickets\": 3,\n    \"specialRequests\": \"Vegetarian food options and front row seating\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/events/registrations/{{registrationId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events", "registrations", "{{registrationId}}"]
            },
            "description": "Update an event registration (admin only)"
          },
          "response": []
        },
        {
          "name": "Check Registration Status",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/events/registrations/{{registrationId}}/status",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events", "registrations", "{{registrationId}}", "status"]
            },
            "description": "Check the status of an event registration"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Event Categories",
      "description": "Endpoints for event category operations",
      "item": [
        {
          "name": "Get All Event Categories",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/events/categories",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events", "categories"]
            },
            "description": "Get a list of all event categories"
          },
          "response": []
        },
        {
          "name": "Create Event Category (Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Film Festival\",\n    \"description\": \"Film festival events\",\n    \"icon\": \"film-festival-icon\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/events/categories",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events", "categories"]
            },
            "description": "Create a new event category (admin only)"
          },
          "response": []
        },
        {
          "name": "Update Event Category (Admin)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Film Festival\",\n    \"description\": \"International film festival events\",\n    \"icon\": \"film-festival-icon-updated\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/events/categories/{{categoryId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events", "categories", "{{categoryId}}"]
            },
            "description": "Update an event category (admin only)"
          },
          "response": []
        },
        {
          "name": "Delete Event Category (Admin)",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/events/categories/{{categoryId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events", "categories", "{{categoryId}}"]
            },
            "description": "Delete an event category (admin only)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Event Statistics",
      "description": "Endpoints for event statistics",
      "item": [
        {
          "name": "Get Event Statistics (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/events/statistics",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events", "statistics"]
            },
            "description": "Get overall event statistics (admin only)"
          },
          "response": []
        },
        {
          "name": "Get Event Statistics by Category (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/events/statistics/category",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events", "statistics", "category"]
            },
            "description": "Get event statistics by category (admin only)"
          },
          "response": []
        },
        {
          "name": "Get Event Attendance Statistics (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/events/statistics/attendance",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events", "statistics", "attendance"]
            },
            "description": "Get event attendance statistics (admin only)"
          },
          "response": []
        },
        {
          "name": "Get Event Revenue Statistics (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/events/statistics/revenue",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events", "statistics", "revenue"]
            },
            "description": "Get event revenue statistics (admin only)"
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Get today's date in YYYY-MM-DD format",
          "const today = new Date();",
          "const todayFormatted = today.toISOString().split('T')[0];",
          "",
          "// Format display date (e.g., \"December 25, 2023\")",
          "const options = { year: 'numeric', month: 'long', day: 'numeric' };",
          "const displayDate = today.toLocaleDateString('en-US', options);",
          "",
          "// Get day of week",
          "const daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];",
          "const dayOfWeek = daysOfWeek[today.getDay()];",
          "",
          "// Set environment variables",
          "pm.environment.set('date', todayFormatted);",
          "pm.environment.set('displayDate', displayDate);",
          "pm.environment.set('dayOfWeek', dayOfWeek);"
        ]
      }
    }
  ]
}
