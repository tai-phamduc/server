{
  "info": {
    "name": "Movie Booking Complete API Collection",
    "description": "A comprehensive collection of all API endpoints for the Movie Booking System",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Actors",
      "description": "API endpoints for actors",
      "item": [
        {
          "name": "Authentication",
          "description": "Endpoints for user authentication",
          "item": [
            {
              "name": "Login",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"password123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/login",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "login"
                  ]
                },
                "description": "Login to get authentication token"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Actors",
          "description": "Endpoints for actor operations",
          "item": [
            {
              "name": "Get All Actors",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/actors",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "actors"
                  ]
                },
                "description": "Get a list of all actors"
              },
              "response": []
            },
            {
              "name": "Get Actors with Pagination",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/actors?page=1&limit=10",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "actors"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "1"
                    },
                    {
                      "key": "limit",
                      "value": "10"
                    }
                  ]
                },
                "description": "Get a paginated list of actors"
              },
              "response": []
            },
            {
              "name": "Get Actor by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/actors/{{actorId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "actors",
                    "{{actorId}}"
                  ]
                },
                "description": "Get details of a specific actor by ID"
              },
              "response": []
            },
            {
              "name": "Search Actors",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/actors/search?keyword=tom",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "actors",
                    "search"
                  ],
                  "query": [
                    {
                      "key": "keyword",
                      "value": "tom"
                    }
                  ]
                },
                "description": "Search for actors by name"
              },
              "response": []
            },
            {
              "name": "Get Popular Actors",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/actors/popular?limit=5",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "actors",
                    "popular"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "5"
                    }
                  ]
                },
                "description": "Get most popular actors"
              },
              "response": []
            },
            {
              "name": "Create Actor (Admin)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Tom Hanks\",\n    \"bio\": \"Thomas Jeffrey Hanks is an American actor and filmmaker. Known for both his comedic and dramatic roles, he is one of the most popular and recognizable film stars worldwide.\",\n    \"birthDate\": \"1956-07-09\",\n    \"birthPlace\": \"Concord, California, USA\",\n    \"image\": \"https://example.com/tom-hanks.jpg\",\n    \"gender\": \"Male\",\n    \"height\": \"183\",\n    \"socialMedia\": {\n        \"twitter\": \"@tomhanks\",\n        \"instagram\": \"@tomhanks\",\n        \"facebook\": \"TomHanks\"\n    },\n    \"awards\": [\n        {\n            \"name\": \"Academy Award for Best Actor\",\n            \"year\": 1994,\n            \"movie\": \"Forrest Gump\"\n        },\n        {\n            \"name\": \"Academy Award for Best Actor\",\n            \"year\": 1995,\n            \"movie\": \"Philadelphia\"\n        }\n    ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/actors",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "actors"
                  ]
                },
                "description": "Create a new actor (admin only)"
              },
              "response": []
            },
            {
              "name": "Update Actor (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Tom Hanks\",\n    \"bio\": \"Updated bio for Tom Hanks. Thomas Jeffrey Hanks is an American actor and filmmaker. Known for both his comedic and dramatic roles, he is one of the most popular and recognizable film stars worldwide.\",\n    \"image\": \"https://example.com/tom-hanks-updated.jpg\",\n    \"socialMedia\": {\n        \"twitter\": \"@tomhanks\",\n        \"instagram\": \"@tomhanks\",\n        \"facebook\": \"TomHanks\",\n        \"website\": \"https://www.tomhanks.com\"\n    },\n    \"awards\": [\n        {\n            \"name\": \"Academy Award for Best Actor\",\n            \"year\": 1994,\n            \"movie\": \"Forrest Gump\"\n        },\n        {\n            \"name\": \"Academy Award for Best Actor\",\n            \"year\": 1995,\n            \"movie\": \"Philadelphia\"\n        },\n        {\n            \"name\": \"Golden Globe Award for Best Actor\",\n            \"year\": 1994,\n            \"movie\": \"Forrest Gump\"\n        }\n    ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/actors/{{actorId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "actors",
                    "{{actorId}}"
                  ]
                },
                "description": "Update an existing actor (admin only)"
              },
              "response": []
            },
            {
              "name": "Delete Actor (Admin)",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/actors/{{actorId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "actors",
                    "{{actorId}}"
                  ]
                },
                "description": "Delete an actor (admin only)"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Actor-Movie Associations",
          "description": "Endpoints for managing actor-movie associations",
          "item": [
            {
              "name": "Get Movies by Actor",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/actors/{{actorId}}/movies",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "actors",
                    "{{actorId}}",
                    "movies"
                  ]
                },
                "description": "Get all movies featuring a specific actor"
              },
              "response": []
            },
            {
              "name": "Get Actors by Movie",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/movies/{{movieId}}/actors",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "movies",
                    "{{movieId}}",
                    "actors"
                  ]
                },
                "description": "Get all actors in a specific movie"
              },
              "response": []
            },
            {
              "name": "Add Actor to Movie (Admin)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"character\": \"Forrest Gump\",\n    \"isMainCast\": true\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/movies/{{movieId}}/actors/{{actorId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "movies",
                    "{{movieId}}",
                    "actors",
                    "{{actorId}}"
                  ]
                },
                "description": "Add an actor to a movie (admin only)"
              },
              "response": []
            },
            {
              "name": "Update Actor Role in Movie (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"character\": \"Updated Character Name\",\n    \"isMainCast\": true\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/movies/{{movieId}}/actors/{{actorId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "movies",
                    "{{movieId}}",
                    "actors",
                    "{{actorId}}"
                  ]
                },
                "description": "Update an actor's role in a movie (admin only)"
              },
              "response": []
            },
            {
              "name": "Remove Actor from Movie (Admin)",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/movies/{{movieId}}/actors/{{actorId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "movies",
                    "{{movieId}}",
                    "actors",
                    "{{actorId}}"
                  ]
                },
                "description": "Remove an actor from a movie (admin only)"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Actor Awards",
          "description": "Endpoints for managing actor awards",
          "item": [
            {
              "name": "Get Actor Awards",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/actors/{{actorId}}/awards",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "actors",
                    "{{actorId}}",
                    "awards"
                  ]
                },
                "description": "Get all awards for a specific actor"
              },
              "response": []
            },
            {
              "name": "Add Award to Actor (Admin)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Golden Globe Award for Best Actor\",\n    \"year\": 2001,\n    \"movie\": \"Cast Away\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/actors/{{actorId}}/awards",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "actors",
                    "{{actorId}}",
                    "awards"
                  ]
                },
                "description": "Add an award to an actor (admin only)"
              },
              "response": []
            },
            {
              "name": "Update Actor Award (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Golden Globe Award for Best Actor - Motion Picture Drama\",\n    \"year\": 2001,\n    \"movie\": \"Cast Away\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/actors/{{actorId}}/awards/{{awardId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "actors",
                    "{{actorId}}",
                    "awards",
                    "{{awardId}}"
                  ]
                },
                "description": "Update an actor's award (admin only)"
              },
              "response": []
            },
            {
              "name": "Remove Award from Actor (Admin)",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/actors/{{actorId}}/awards/{{awardId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "actors",
                    "{{actorId}}",
                    "awards",
                    "{{awardId}}"
                  ]
                },
                "description": "Remove an award from an actor (admin only)"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Actor Statistics",
          "description": "Endpoints for actor statistics",
          "item": [
            {
              "name": "Get Actor Statistics (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/actors/statistics",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "actors",
                    "statistics"
                  ]
                },
                "description": "Get overall actor statistics (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Most Featured Actors (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/actors/statistics/most-featured?limit=5",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "actors",
                    "statistics",
                    "most-featured"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "5"
                    }
                  ]
                },
                "description": "Get actors featured in the most movies (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Most Awarded Actors (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/actors/statistics/most-awarded?limit=5",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "actors",
                    "statistics",
                    "most-awarded"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "5"
                    }
                  ]
                },
                "description": "Get actors with the most awards (admin only)"
              },
              "response": []
            }
          ]
        }
      ]
    },
    {
      "name": "Bookings",
      "description": "API endpoints for bookings",
      "item": [
        {
          "name": "Authentication",
          "description": "Endpoints for user authentication",
          "item": [
            {
              "name": "Login",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"password123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/login",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "login"
                  ]
                },
                "description": "Login to get authentication token"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Bookings",
          "description": "Endpoints for booking operations",
          "item": [
            {
              "name": "Get All Bookings (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/bookings",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "bookings"
                  ]
                },
                "description": "Get a list of all bookings (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Bookings with Pagination (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/bookings?page=1&limit=10",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "bookings"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "1"
                    },
                    {
                      "key": "limit",
                      "value": "10"
                    }
                  ]
                },
                "description": "Get a paginated list of bookings (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Booking by ID",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/bookings/{{bookingId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "bookings",
                    "{{bookingId}}"
                  ]
                },
                "description": "Get details of a specific booking by ID"
              },
              "response": []
            },
            {
              "name": "Get My Bookings",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/bookings/my-bookings",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "bookings",
                    "my-bookings"
                  ]
                },
                "description": "Get all bookings for the authenticated user"
              },
              "response": []
            },
            {
              "name": "Get Bookings by User (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/bookings/user/{{userId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "bookings",
                    "user",
                    "{{userId}}"
                  ]
                },
                "description": "Get all bookings for a specific user (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Bookings by Movie",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/bookings/movie/{{movieId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "bookings",
                    "movie",
                    "{{movieId}}"
                  ]
                },
                "description": "Get all bookings for a specific movie (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Bookings by Screening",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/bookings/screening/{{screeningId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "bookings",
                    "screening",
                    "{{screeningId}}"
                  ]
                },
                "description": "Get all bookings for a specific screening (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Bookings by Date Range (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/bookings/date-range?startDate=2023-12-01&endDate=2023-12-31",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "bookings",
                    "date-range"
                  ],
                  "query": [
                    {
                      "key": "startDate",
                      "value": "2023-12-01"
                    },
                    {
                      "key": "endDate",
                      "value": "2023-12-31"
                    }
                  ]
                },
                "description": "Get all bookings within a date range (admin only)"
              },
              "response": []
            },
            {
              "name": "Create Booking",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"screeningId\": \"{{screeningId}}\",\n    \"seats\": [\"A1\", \"A2\"],\n    \"totalAmount\": 20,\n    \"paymentMethod\": \"credit_card\",\n    \"paymentDetails\": {\n        \"cardNumber\": \"**** **** **** 1234\",\n        \"cardHolder\": \"Test User\",\n        \"expiryDate\": \"12/25\"\n    }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/bookings",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "bookings"
                  ]
                },
                "description": "Create a new booking"
              },
              "response": []
            },
            {
              "name": "Update Booking Status (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"status\": \"confirmed\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/bookings/{{bookingId}}/status",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "bookings",
                    "{{bookingId}}",
                    "status"
                  ]
                },
                "description": "Update the status of a booking (admin only)"
              },
              "response": []
            },
            {
              "name": "Cancel Booking",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/bookings/{{bookingId}}/cancel",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "bookings",
                    "{{bookingId}}",
                    "cancel"
                  ]
                },
                "description": "Cancel a booking"
              },
              "response": []
            },
            {
              "name": "Request Refund",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"reason\": \"Changed plans\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/bookings/{{bookingId}}/refund",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "bookings",
                    "{{bookingId}}",
                    "refund"
                  ]
                },
                "description": "Request a refund for a booking"
              },
              "response": []
            },
            {
              "name": "Process Refund (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"status\": \"approved\",\n    \"refundAmount\": 20,\n    \"notes\": \"Full refund approved\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/bookings/{{bookingId}}/refund/process",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "bookings",
                    "{{bookingId}}",
                    "refund",
                    "process"
                  ]
                },
                "description": "Process a refund request (admin only)"
              },
              "response": []
            },
            {
              "name": "Delete Booking (Admin)",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/bookings/{{bookingId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "bookings",
                    "{{bookingId}}"
                  ]
                },
                "description": "Delete a booking (admin only)"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Booking Statistics",
          "description": "Endpoints for booking statistics",
          "item": [
            {
              "name": "Get Booking Statistics (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/bookings/statistics",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "bookings",
                    "statistics"
                  ]
                },
                "description": "Get overall booking statistics (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Booking Statistics by Movie (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/bookings/statistics/movie/{{movieId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "bookings",
                    "statistics",
                    "movie",
                    "{{movieId}}"
                  ]
                },
                "description": "Get booking statistics for a specific movie (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Booking Statistics by Date Range (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/bookings/statistics/date-range?startDate=2023-12-01&endDate=2023-12-31",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "bookings",
                    "statistics",
                    "date-range"
                  ],
                  "query": [
                    {
                      "key": "startDate",
                      "value": "2023-12-01"
                    },
                    {
                      "key": "endDate",
                      "value": "2023-12-31"
                    }
                  ]
                },
                "description": "Get booking statistics for a specific date range (admin only)"
              },
              "response": []
            }
          ]
        }
      ]
    },
    {
      "name": "Cinemas",
      "description": "API endpoints for cinemas",
      "item": [
        {
          "name": "Authentication",
          "description": "Endpoints for user authentication (required for admin operations)",
          "item": [
            {
              "name": "Login Admin",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"password123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/login",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "login"
                  ]
                },
                "description": "Login as admin to get authentication token for protected cinema operations"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Cinemas",
          "description": "Endpoints for cinema operations",
          "item": [
            {
              "name": "Get All Cinemas",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/cinemas",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "cinemas"
                  ]
                },
                "description": "Get a list of all active cinemas"
              },
              "response": []
            },
            {
              "name": "Get Cinemas with Filters",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/cinemas?city=New York&name=AMC",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "cinemas"
                  ],
                  "query": [
                    {
                      "key": "city",
                      "value": "New York"
                    },
                    {
                      "key": "name",
                      "value": "AMC"
                    }
                  ]
                },
                "description": "Get cinemas filtered by city and/or name"
              },
              "response": []
            },
            {
              "name": "Get Cinema by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/cinemas/{{cinemaId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "cinemas",
                    "{{cinemaId}}"
                  ]
                },
                "description": "Get details of a specific cinema by ID"
              },
              "response": []
            },
            {
              "name": "Get Cinemas by City",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/cinemas/city/{{city}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "cinemas",
                    "city",
                    "{{city}}"
                  ]
                },
                "description": "Get cinemas in a specific city"
              },
              "response": []
            },
            {
              "name": "Get Cinemas by Movie and Date",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/cinemas/movie/{{movieId}}/date/{{date}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "cinemas",
                    "movie",
                    "{{movieId}}",
                    "date",
                    "{{date}}"
                  ]
                },
                "description": "Get cinemas showing a specific movie on a specific date"
              },
              "response": []
            },
            {
              "name": "Create Cinema (Admin)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"AMC Empire 25\",\n    \"slug\": \"amc-empire-25\",\n    \"location\": {\n        \"address\": \"234 W 42nd St\",\n        \"city\": \"New York\",\n        \"state\": \"NY\",\n        \"zipCode\": \"10036\",\n        \"country\": \"USA\",\n        \"coordinates\": {\n            \"type\": \"Point\",\n            \"coordinates\": [-73.9896, 40.7569]\n        }\n    },\n    \"contactInfo\": {\n        \"phone\": \"2123984970\",\n        \"email\": \"contact@amcempire25.com\",\n        \"website\": \"https://www.amctheatres.com/movie-theatres/new-york-city/amc-empire-25\"\n    },\n    \"openingHours\": {\n        \"monday\": { \"open\": \"10:00\", \"close\": \"23:00\" },\n        \"tuesday\": { \"open\": \"10:00\", \"close\": \"23:00\" },\n        \"wednesday\": { \"open\": \"10:00\", \"close\": \"23:00\" },\n        \"thursday\": { \"open\": \"10:00\", \"close\": \"23:00\" },\n        \"friday\": { \"open\": \"10:00\", \"close\": \"00:00\" },\n        \"saturday\": { \"open\": \"10:00\", \"close\": \"00:00\" },\n        \"sunday\": { \"open\": \"10:00\", \"close\": \"23:00\" }\n    },\n    \"displayHours\": \"10:00 AM - 11:00 PM\",\n    \"description\": \"AMC Empire 25 is a popular movie theater located in Times Square, featuring 25 screens and the latest movies.\",\n    \"shortDescription\": \"25-screen multiplex in Times Square\",\n    \"featuredImage\": \"https://example.com/images/amc-empire-25.jpg\",\n    \"amenities\": [\"IMAX\", \"Dolby Cinema\", \"RealD 3D\", \"Wheelchair Accessible\", \"Food Court\"],\n    \"ticketPriceRange\": {\n        \"min\": 12.99,\n        \"max\": 24.99\n    },\n    \"socialMedia\": {\n        \"facebook\": \"https://facebook.com/amctheatres\",\n        \"twitter\": \"https://twitter.com/amctheatres\",\n        \"instagram\": \"https://instagram.com/amctheatres\"\n    },\n    \"accessibility\": {\n        \"wheelchairAccessible\": true,\n        \"assistiveListeningDevices\": true,\n        \"closedCaptioning\": true,\n        \"audioDescription\": true\n    },\n    \"parkingInfo\": {\n        \"hasParkingLot\": true,\n        \"isParkingFree\": false,\n        \"parkingFee\": 15,\n        \"parkingNotes\": \"Parking available in nearby garages. Validation available for discounted rates.\"\n    },\n    \"concessions\": {\n        \"hasFullMenu\": true,\n        \"hasAlcohol\": true,\n        \"hasDineInService\": false\n    }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/cinemas",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "cinemas"
                  ]
                },
                "description": "Create a new cinema (admin only)"
              },
              "response": []
            },
            {
              "name": "Update Cinema (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"AMC Empire 25 - Updated\",\n    \"description\": \"Updated description for AMC Empire 25\",\n    \"ticketPriceRange\": {\n        \"min\": 13.99,\n        \"max\": 25.99\n    },\n    \"isFeatured\": true\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/cinemas/{{cinemaId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "cinemas",
                    "{{cinemaId}}"
                  ]
                },
                "description": "Update an existing cinema (admin only)"
              },
              "response": []
            },
            {
              "name": "Delete Cinema (Admin)",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/cinemas/{{cinemaId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "cinemas",
                    "{{cinemaId}}"
                  ]
                },
                "description": "Delete a cinema (admin only) - marks as inactive rather than deleting"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Cinema Rooms",
          "description": "Endpoints for cinema room operations",
          "item": [
            {
              "name": "Add Room to Cinema (Admin)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"IMAX Theater\",\n    \"capacity\": 250,\n    \"type\": \"imax\",\n    \"features\": [\"Reclining Seats\", \"Dolby Atmos\", \"Laser Projection\"],\n    \"seatLayout\": {\n        \"rows\": 15,\n        \"columns\": 20,\n        \"seats\": [\n            {\n                \"row\": \"A\",\n                \"column\": 1,\n                \"type\": \"standard\",\n                \"price\": 14.99,\n                \"isActive\": true,\n                \"seatNumber\": \"A1\"\n            },\n            {\n                \"row\": \"A\",\n                \"column\": 2,\n                \"type\": \"standard\",\n                \"price\": 14.99,\n                \"isActive\": true,\n                \"seatNumber\": \"A2\"\n            },\n            {\n                \"row\": \"B\",\n                \"column\": 1,\n                \"type\": \"premium\",\n                \"price\": 19.99,\n                \"isActive\": true,\n                \"seatNumber\": \"B1\"\n            },\n            {\n                \"row\": \"B\",\n                \"column\": 2,\n                \"type\": \"premium\",\n                \"price\": 19.99,\n                \"isActive\": true,\n                \"seatNumber\": \"B2\"\n            }\n        ]\n    },\n    \"screenSize\": \"imax\",\n    \"soundSystem\": \"dolby-atmos\",\n    \"specialFeatures\": [\"4K Projection\", \"3D Capability\"]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/cinemas/{{cinemaId}}/rooms",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "cinemas",
                    "{{cinemaId}}",
                    "rooms"
                  ]
                },
                "description": "Add a new room to a cinema (admin only)"
              },
              "response": []
            },
            {
              "name": "Update Room (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"IMAX Theater - Updated\",\n    \"capacity\": 275,\n    \"features\": [\"Reclining Seats\", \"Dolby Atmos\", \"Laser Projection\", \"Reserved Seating\"],\n    \"screenSize\": \"imax\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/cinemas/{{cinemaId}}/rooms/{{roomId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "cinemas",
                    "{{cinemaId}}",
                    "rooms",
                    "{{roomId}}"
                  ]
                },
                "description": "Update an existing room in a cinema (admin only)"
              },
              "response": []
            },
            {
              "name": "Remove Room (Admin)",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/cinemas/{{cinemaId}}/rooms/{{roomId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "cinemas",
                    "{{cinemaId}}",
                    "rooms",
                    "{{roomId}}"
                  ]
                },
                "description": "Remove a room from a cinema (admin only)"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Screenings",
          "description": "Endpoints for cinema screenings",
          "item": [
            {
              "name": "Get Screenings by Movie and Cinema",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/screenings/movie/{{movieId}}/cinema/{{cinemaId}}/date/{{date}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "screenings",
                    "movie",
                    "{{movieId}}",
                    "cinema",
                    "{{cinemaId}}",
                    "date",
                    "{{date}}"
                  ]
                },
                "description": "Get screenings for a specific movie at a specific cinema on a specific date"
              },
              "response": []
            },
            {
              "name": "Get Screenings by Movie and Date",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/screenings/movie/{{movieId}}/date/{{date}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "screenings",
                    "movie",
                    "{{movieId}}",
                    "date",
                    "{{date}}"
                  ]
                },
                "description": "Get screenings for a specific movie on a specific date across all cinemas"
              },
              "response": []
            },
            {
              "name": "Get Available Seats",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/screenings/{{screeningId}}/seats",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "screenings",
                    "{{screeningId}}",
                    "seats"
                  ]
                },
                "description": "Get available seats for a specific screening"
              },
              "response": []
            },
            {
              "name": "Create Screening (Admin)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"movie_id\": \"{{movieId}}\",\n    \"cinema_id\": \"{{cinemaId}}\",\n    \"room_id\": \"{{roomId}}\",\n    \"startTime\": \"2023-12-25T18:30:00.000Z\",\n    \"endTime\": \"2023-12-25T20:45:00.000Z\",\n    \"displayTime\": \"6:30 PM\",\n    \"price\": 14.99,\n    \"format\": \"2D\",\n    \"language\": \"English\",\n    \"subtitles\": \"None\",\n    \"isActive\": true,\n    \"status\": \"scheduled\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/screenings",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "screenings"
                  ]
                },
                "description": "Create a new screening (admin only)"
              },
              "response": []
            },
            {
              "name": "Update Screening (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"startTime\": \"2023-12-25T19:00:00.000Z\",\n    \"endTime\": \"2023-12-25T21:15:00.000Z\",\n    \"displayTime\": \"7:00 PM\",\n    \"price\": 16.99,\n    \"status\": \"scheduled\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/screenings/{{screeningId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "screenings",
                    "{{screeningId}}"
                  ]
                },
                "description": "Update an existing screening (admin only)"
              },
              "response": []
            },
            {
              "name": "Delete Screening (Admin)",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/screenings/{{screeningId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "screenings",
                    "{{screeningId}}"
                  ]
                },
                "description": "Delete a screening (admin only) - marks as inactive rather than deleting"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Products",
          "description": "Endpoints for cinema products (concessions)",
          "item": [
            {
              "name": "Get Products by Cinema",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/products/cinema/{{cinemaId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "products",
                    "cinema",
                    "{{cinemaId}}"
                  ]
                },
                "description": "Get products available at a specific cinema"
              },
              "response": []
            },
            {
              "name": "Create Product (Admin)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Large Popcorn\",\n    \"description\": \"Freshly popped buttery popcorn in a large container\",\n    \"price\": 8.99,\n    \"category\": \"Snacks\",\n    \"image\": \"https://example.com/images/large-popcorn.jpg\",\n    \"cinema_id\": \"{{cinemaId}}\",\n    \"isActive\": true,\n    \"isPopular\": true,\n    \"order\": 1\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/products",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "products"
                  ]
                },
                "description": "Create a new product for a cinema (admin only)"
              },
              "response": []
            }
          ]
        }
      ]
    },
    {
      "name": "Cinemas",
      "description": "API endpoints for cinemas",
      "item": [
        {
          "name": "Movies",
          "description": "Get movie data to use in cinema search",
          "item": [
            {
              "name": "Get All Movies",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/movies",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "movies"
                  ]
                },
                "description": "Get a list of all movies to find a movie ID for testing"
              },
              "response": []
            },
            {
              "name": "Get Now Playing Movies",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/movies/status/Now Playing",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "movies",
                    "status",
                    "Now Playing"
                  ]
                },
                "description": "Get movies that are currently playing to find a movie ID for testing"
              },
              "response": []
            },
            {
              "name": "Get Movie by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/movies/{{movieId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "movies",
                    "{{movieId}}"
                  ]
                },
                "description": "Get details of a specific movie by ID"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Cinemas by Movie and Date",
          "description": "Find cinemas showing a specific movie on a particular date",
          "item": [
            {
              "name": "Get Cinemas by Movie and Date",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/cinemas/movie/{{movieId}}/date/{{date}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "cinemas",
                    "movie",
                    "{{movieId}}",
                    "date",
                    "{{date}}"
                  ]
                },
                "description": "Get cinemas showing a specific movie on a specific date"
              },
              "response": []
            },
            {
              "name": "Get Cinemas by Movie and Today's Date",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/cinemas/movie/{{movieId}}/date/{{todayDate}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "cinemas",
                    "movie",
                    "{{movieId}}",
                    "date",
                    "{{todayDate}}"
                  ]
                },
                "description": "Get cinemas showing a specific movie today"
              },
              "response": []
            },
            {
              "name": "Get Cinemas by Movie and Tomorrow's Date",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/cinemas/movie/{{movieId}}/date/{{tomorrowDate}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "cinemas",
                    "movie",
                    "{{movieId}}",
                    "date",
                    "{{tomorrowDate}}"
                  ]
                },
                "description": "Get cinemas showing a specific movie tomorrow"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Screenings",
          "description": "Get screening details for a movie at a cinema",
          "item": [
            {
              "name": "Get Screenings by Movie and Date",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/screenings/movie/{{movieId}}/date/{{date}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "screenings",
                    "movie",
                    "{{movieId}}",
                    "date",
                    "{{date}}"
                  ]
                },
                "description": "Get all screenings for a specific movie on a specific date across all cinemas"
              },
              "response": []
            },
            {
              "name": "Get Screenings by Movie, Cinema and Date",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/screenings/movie/{{movieId}}/cinema/{{cinemaId}}/date/{{date}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "screenings",
                    "movie",
                    "{{movieId}}",
                    "cinema",
                    "{{cinemaId}}",
                    "date",
                    "{{date}}"
                  ]
                },
                "description": "Get screenings for a specific movie at a specific cinema on a specific date"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Cinema Details",
          "description": "Get detailed information about cinemas",
          "item": [
            {
              "name": "Get All Cinemas",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/cinemas",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "cinemas"
                  ]
                },
                "description": "Get a list of all cinemas"
              },
              "response": []
            },
            {
              "name": "Get Cinema by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/cinemas/{{cinemaId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "cinemas",
                    "{{cinemaId}}"
                  ]
                },
                "description": "Get detailed information about a specific cinema"
              },
              "response": []
            },
            {
              "name": "Get Cinemas by City",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/cinemas/city/{{city}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "cinemas",
                    "city",
                    "{{city}}"
                  ]
                },
                "description": "Get cinemas in a specific city"
              },
              "response": []
            }
          ]
        }
      ]
    },
    {
      "name": "Directors",
      "description": "API endpoints for directors",
      "item": [
        {
          "name": "Authentication",
          "description": "Endpoints for user authentication",
          "item": [
            {
              "name": "Login",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"password123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/login",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "login"
                  ]
                },
                "description": "Login to get authentication token"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Directors",
          "description": "Endpoints for director operations",
          "item": [
            {
              "name": "Get All Directors",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/directors",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "directors"
                  ]
                },
                "description": "Get a list of all directors"
              },
              "response": []
            },
            {
              "name": "Get Directors with Pagination",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/directors?page=1&limit=10",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "directors"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "1"
                    },
                    {
                      "key": "limit",
                      "value": "10"
                    }
                  ]
                },
                "description": "Get a paginated list of directors"
              },
              "response": []
            },
            {
              "name": "Get Director by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/directors/{{directorId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "directors",
                    "{{directorId}}"
                  ]
                },
                "description": "Get details of a specific director by ID"
              },
              "response": []
            },
            {
              "name": "Search Directors",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/directors/search?keyword=spielberg",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "directors",
                    "search"
                  ],
                  "query": [
                    {
                      "key": "keyword",
                      "value": "spielberg"
                    }
                  ]
                },
                "description": "Search for directors by name"
              },
              "response": []
            },
            {
              "name": "Get Popular Directors",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/directors/popular?limit=5",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "directors",
                    "popular"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "5"
                    }
                  ]
                },
                "description": "Get most popular directors"
              },
              "response": []
            },
            {
              "name": "Create Director (Admin)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Steven Spielberg\",\n    \"bio\": \"Steven Allan Spielberg is an American film director, producer, and screenwriter. He is considered one of the founding pioneers of the New Hollywood era and one of the most popular directors and producers in film history.\",\n    \"birthDate\": \"1946-12-18\",\n    \"birthPlace\": \"Cincinnati, Ohio, USA\",\n    \"image\": \"https://example.com/spielberg.jpg\",\n    \"gender\": \"Male\",\n    \"socialMedia\": {\n        \"twitter\": \"@stevenspielberg\",\n        \"instagram\": \"@stevenspielberg\",\n        \"facebook\": \"StevenSpielberg\"\n    },\n    \"awards\": [\n        {\n            \"name\": \"Academy Award for Best Director\",\n            \"year\": 1994,\n            \"movie\": \"Schindler's List\"\n        },\n        {\n            \"name\": \"Academy Award for Best Director\",\n            \"year\": 1999,\n            \"movie\": \"Saving Private Ryan\"\n        }\n    ],\n    \"filmography\": [\n        {\n            \"title\": \"Jaws\",\n            \"year\": 1975,\n            \"role\": \"Director\"\n        },\n        {\n            \"title\": \"E.T. the Extra-Terrestrial\",\n            \"year\": 1982,\n            \"role\": \"Director\"\n        }\n    ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/directors",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "directors"
                  ]
                },
                "description": "Create a new director (admin only)"
              },
              "response": []
            },
            {
              "name": "Update Director (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Steven Spielberg\",\n    \"bio\": \"Updated bio for Steven Spielberg. Steven Allan Spielberg is an American film director, producer, and screenwriter. He is considered one of the founding pioneers of the New Hollywood era and one of the most popular directors and producers in film history.\",\n    \"image\": \"https://example.com/spielberg-updated.jpg\",\n    \"socialMedia\": {\n        \"twitter\": \"@stevenspielberg\",\n        \"instagram\": \"@stevenspielberg\",\n        \"facebook\": \"StevenSpielberg\",\n        \"website\": \"https://www.amblin.com\"\n    },\n    \"awards\": [\n        {\n            \"name\": \"Academy Award for Best Director\",\n            \"year\": 1994,\n            \"movie\": \"Schindler's List\"\n        },\n        {\n            \"name\": \"Academy Award for Best Director\",\n            \"year\": 1999,\n            \"movie\": \"Saving Private Ryan\"\n        },\n        {\n            \"name\": \"Golden Globe Award for Best Director\",\n            \"year\": 1994,\n            \"movie\": \"Schindler's List\"\n        }\n    ],\n    \"filmography\": [\n        {\n            \"title\": \"Jaws\",\n            \"year\": 1975,\n            \"role\": \"Director\"\n        },\n        {\n            \"title\": \"E.T. the Extra-Terrestrial\",\n            \"year\": 1982,\n            \"role\": \"Director\"\n        },\n        {\n            \"title\": \"Jurassic Park\",\n            \"year\": 1993,\n            \"role\": \"Director\"\n        }\n    ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/directors/{{directorId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "directors",
                    "{{directorId}}"
                  ]
                },
                "description": "Update an existing director (admin only)"
              },
              "response": []
            },
            {
              "name": "Delete Director (Admin)",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/directors/{{directorId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "directors",
                    "{{directorId}}"
                  ]
                },
                "description": "Delete a director (admin only)"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Director-Movie Associations",
          "description": "Endpoints for managing director-movie associations",
          "item": [
            {
              "name": "Get Movies by Director",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/directors/{{directorId}}/movies",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "directors",
                    "{{directorId}}",
                    "movies"
                  ]
                },
                "description": "Get all movies directed by a specific director"
              },
              "response": []
            },
            {
              "name": "Get Directors by Movie",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/movies/{{movieId}}/directors",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "movies",
                    "{{movieId}}",
                    "directors"
                  ]
                },
                "description": "Get all directors of a specific movie"
              },
              "response": []
            },
            {
              "name": "Add Director to Movie (Admin)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"role\": \"Director\",\n    \"isPrimaryDirector\": true\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/movies/{{movieId}}/directors/{{directorId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "movies",
                    "{{movieId}}",
                    "directors",
                    "{{directorId}}"
                  ]
                },
                "description": "Add a director to a movie (admin only)"
              },
              "response": []
            },
            {
              "name": "Update Director Role in Movie (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"role\": \"Co-Director\",\n    \"isPrimaryDirector\": false\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/movies/{{movieId}}/directors/{{directorId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "movies",
                    "{{movieId}}",
                    "directors",
                    "{{directorId}}"
                  ]
                },
                "description": "Update a director's role in a movie (admin only)"
              },
              "response": []
            },
            {
              "name": "Remove Director from Movie (Admin)",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/movies/{{movieId}}/directors/{{directorId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "movies",
                    "{{movieId}}",
                    "directors",
                    "{{directorId}}"
                  ]
                },
                "description": "Remove a director from a movie (admin only)"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Director Awards",
          "description": "Endpoints for managing director awards",
          "item": [
            {
              "name": "Get Director Awards",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/directors/{{directorId}}/awards",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "directors",
                    "{{directorId}}",
                    "awards"
                  ]
                },
                "description": "Get all awards for a specific director"
              },
              "response": []
            },
            {
              "name": "Add Award to Director (Admin)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Golden Globe Award for Best Director\",\n    \"year\": 1999,\n    \"movie\": \"Saving Private Ryan\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/directors/{{directorId}}/awards",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "directors",
                    "{{directorId}}",
                    "awards"
                  ]
                },
                "description": "Add an award to a director (admin only)"
              },
              "response": []
            },
            {
              "name": "Update Director Award (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Golden Globe Award for Best Director - Motion Picture\",\n    \"year\": 1999,\n    \"movie\": \"Saving Private Ryan\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/directors/{{directorId}}/awards/{{awardId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "directors",
                    "{{directorId}}",
                    "awards",
                    "{{awardId}}"
                  ]
                },
                "description": "Update a director's award (admin only)"
              },
              "response": []
            },
            {
              "name": "Remove Award from Director (Admin)",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/directors/{{directorId}}/awards/{{awardId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "directors",
                    "{{directorId}}",
                    "awards",
                    "{{awardId}}"
                  ]
                },
                "description": "Remove an award from a director (admin only)"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Director Filmography",
          "description": "Endpoints for managing director filmography",
          "item": [
            {
              "name": "Get Director Filmography",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/directors/{{directorId}}/filmography",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "directors",
                    "{{directorId}}",
                    "filmography"
                  ]
                },
                "description": "Get the filmography for a specific director"
              },
              "response": []
            },
            {
              "name": "Add Film to Filmography (Admin)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"Ready Player One\",\n    \"year\": 2018,\n    \"role\": \"Director\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/directors/{{directorId}}/filmography",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "directors",
                    "{{directorId}}",
                    "filmography"
                  ]
                },
                "description": "Add a film to a director's filmography (admin only)"
              },
              "response": []
            },
            {
              "name": "Update Filmography Entry (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"Ready Player One\",\n    \"year\": 2018,\n    \"role\": \"Director/Producer\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/directors/{{directorId}}/filmography/{{filmId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "directors",
                    "{{directorId}}",
                    "filmography",
                    "{{filmId}}"
                  ]
                },
                "description": "Update a film in a director's filmography (admin only)"
              },
              "response": []
            },
            {
              "name": "Remove Film from Filmography (Admin)",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/directors/{{directorId}}/filmography/{{filmId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "directors",
                    "{{directorId}}",
                    "filmography",
                    "{{filmId}}"
                  ]
                },
                "description": "Remove a film from a director's filmography (admin only)"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Director Statistics",
          "description": "Endpoints for director statistics",
          "item": [
            {
              "name": "Get Director Statistics (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/directors/statistics",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "directors",
                    "statistics"
                  ]
                },
                "description": "Get overall director statistics (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Most Prolific Directors (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/directors/statistics/most-prolific?limit=5",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "directors",
                    "statistics",
                    "most-prolific"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "5"
                    }
                  ]
                },
                "description": "Get directors with the most films (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Most Awarded Directors (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/directors/statistics/most-awarded?limit=5",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "directors",
                    "statistics",
                    "most-awarded"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "5"
                    }
                  ]
                },
                "description": "Get directors with the most awards (admin only)"
              },
              "response": []
            }
          ]
        }
      ]
    },
    {
      "name": "Events",
      "description": "API endpoints for events",
      "item": [
        {
          "name": "Authentication",
          "description": "Endpoints for user authentication",
          "item": [
            {
              "name": "Login",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"password123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/login",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "login"
                  ]
                },
                "description": "Login to get authentication token"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Events",
          "description": "Endpoints for event operations",
          "item": [
            {
              "name": "Get All Events",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/events",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "events"
                  ]
                },
                "description": "Get a list of all events"
              },
              "response": []
            },
            {
              "name": "Get Events with Pagination",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/events?page=1&limit=10",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "events"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "1"
                    },
                    {
                      "key": "limit",
                      "value": "10"
                    }
                  ]
                },
                "description": "Get a paginated list of events"
              },
              "response": []
            },
            {
              "name": "Get Event by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/events/{{eventId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "events",
                    "{{eventId}}"
                  ]
                },
                "description": "Get details of a specific event by ID"
              },
              "response": []
            },
            {
              "name": "Get Upcoming Events",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/events/upcoming",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "events",
                    "upcoming"
                  ]
                },
                "description": "Get all upcoming events"
              },
              "response": []
            },
            {
              "name": "Get Past Events",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/events/past",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "events",
                    "past"
                  ]
                },
                "description": "Get all past events"
              },
              "response": []
            },
            {
              "name": "Get Events by Date Range",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/events/date-range?startDate={{date}}&endDate=2023-12-31",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "events",
                    "date-range"
                  ],
                  "query": [
                    {
                      "key": "startDate",
                      "value": "{{date}}"
                    },
                    {
                      "key": "endDate",
                      "value": "2023-12-31"
                    }
                  ]
                },
                "description": "Get all events within a date range"
              },
              "response": []
            },
            {
              "name": "Get Events by Category",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/events/category/Premiere",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "events",
                    "category",
                    "Premiere"
                  ]
                },
                "description": "Get all events in a specific category"
              },
              "response": []
            },
            {
              "name": "Get Events by Location",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/events/location/{{city}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "events",
                    "location",
                    "{{city}}"
                  ]
                },
                "description": "Get all events in a specific location"
              },
              "response": []
            },
            {
              "name": "Search Events",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/events/search?keyword=premiere",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "events",
                    "search"
                  ],
                  "query": [
                    {
                      "key": "keyword",
                      "value": "premiere"
                    }
                  ]
                },
                "description": "Search for events by keyword"
              },
              "response": []
            },
            {
              "name": "Create Event (Admin)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"Movie Premiere: Inception\",\n    \"description\": \"Join us for the premiere of Christopher Nolan's Inception, featuring a Q&A session with the cast.\",\n    \"category\": \"Premiere\",\n    \"startDate\": \"2023-12-15T19:00:00Z\",\n    \"endDate\": \"2023-12-15T23:00:00Z\",\n    \"location\": {\n        \"name\": \"AMC Empire 25\",\n        \"address\": \"234 W 42nd St, New York, NY 10036\",\n        \"city\": \"New York\",\n        \"state\": \"NY\",\n        \"country\": \"USA\",\n        \"coordinates\": {\n            \"latitude\": 40.7569,\n            \"longitude\": -73.9896\n        }\n    },\n    \"image\": \"https://example.com/inception-premiere.jpg\",\n    \"featuredImage\": \"https://example.com/inception-premiere-featured.jpg\",\n    \"gallery\": [\n        \"https://example.com/inception-premiere-1.jpg\",\n        \"https://example.com/inception-premiere-2.jpg\"\n    ],\n    \"movieId\": \"{{movieId}}\",\n    \"cinemaId\": \"{{cinemaId}}\",\n    \"capacity\": 200,\n    \"ticketPrice\": 50,\n    \"isPublic\": true,\n    \"isFeatured\": true,\n    \"status\": \"scheduled\",\n    \"tags\": [\"premiere\", \"q&a\", \"christopher nolan\"],\n    \"guests\": [\n        {\n            \"name\": \"Leonardo DiCaprio\",\n            \"role\": \"Actor\"\n        },\n        {\n            \"name\": \"Christopher Nolan\",\n            \"role\": \"Director\"\n        }\n    ],\n    \"organizer\": {\n        \"name\": \"Warner Bros. Pictures\",\n        \"contact\": \"events@warnerbros.com\",\n        \"website\": \"https://www.warnerbros.com\"\n    }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/events",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "events"
                  ]
                },
                "description": "Create a new event (admin only)"
              },
              "response": []
            },
            {
              "name": "Update Event (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"Movie Premiere: Inception - Special Edition\",\n    \"description\": \"Join us for the premiere of Christopher Nolan's Inception, featuring a Q&A session with the cast and a special behind-the-scenes look.\",\n    \"startDate\": \"2023-12-15T18:30:00Z\",\n    \"endDate\": \"2023-12-15T23:30:00Z\",\n    \"capacity\": 250,\n    \"ticketPrice\": 60,\n    \"isPublic\": true,\n    \"isFeatured\": true,\n    \"status\": \"scheduled\",\n    \"tags\": [\"premiere\", \"q&a\", \"christopher nolan\", \"behind-the-scenes\"],\n    \"guests\": [\n        {\n            \"name\": \"Leonardo DiCaprio\",\n            \"role\": \"Actor\"\n        },\n        {\n            \"name\": \"Christopher Nolan\",\n            \"role\": \"Director\"\n        },\n        {\n            \"name\": \"Joseph Gordon-Levitt\",\n            \"role\": \"Actor\"\n        }\n    ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/events/{{eventId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "events",
                    "{{eventId}}"
                  ]
                },
                "description": "Update an existing event (admin only)"
              },
              "response": []
            },
            {
              "name": "Delete Event (Admin)",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/events/{{eventId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "events",
                    "{{eventId}}"
                  ]
                },
                "description": "Delete an event (admin only)"
              },
              "response": []
            },
            {
              "name": "Update Event Status (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"status\": \"cancelled\",\n    \"statusReason\": \"Cancelled due to unforeseen circumstances\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/events/{{eventId}}/status",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "events",
                    "{{eventId}}",
                    "status"
                  ]
                },
                "description": "Update the status of an event (admin only)"
              },
              "response": []
            },
            {
              "name": "Update Event Featured Status (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"isFeatured\": true\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/events/{{eventId}}/featured",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "events",
                    "{{eventId}}",
                    "featured"
                  ]
                },
                "description": "Update the featured status of an event (admin only)"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Event Registrations",
          "description": "Endpoints for event registration operations",
          "item": [
            {
              "name": "Get Event Registrations (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/events/{{eventId}}/registrations",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "events",
                    "{{eventId}}",
                    "registrations"
                  ]
                },
                "description": "Get all registrations for a specific event (admin only)"
              },
              "response": []
            },
            {
              "name": "Get My Event Registrations",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/events/registrations/my-registrations",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "events",
                    "registrations",
                    "my-registrations"
                  ]
                },
                "description": "Get all event registrations for the authenticated user"
              },
              "response": []
            },
            {
              "name": "Register for Event",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"numberOfTickets\": 2,\n    \"specialRequests\": \"Vegetarian food options\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/events/{{eventId}}/register",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "events",
                    "{{eventId}}",
                    "register"
                  ]
                },
                "description": "Register for an event"
              },
              "response": []
            },
            {
              "name": "Cancel Registration",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/events/registrations/{{registrationId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "events",
                    "registrations",
                    "{{registrationId}}"
                  ]
                },
                "description": "Cancel an event registration"
              },
              "response": []
            },
            {
              "name": "Update Registration (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"status\": \"confirmed\",\n    \"numberOfTickets\": 3,\n    \"specialRequests\": \"Vegetarian food options and front row seating\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/events/registrations/{{registrationId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "events",
                    "registrations",
                    "{{registrationId}}"
                  ]
                },
                "description": "Update an event registration (admin only)"
              },
              "response": []
            },
            {
              "name": "Check Registration Status",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/events/registrations/{{registrationId}}/status",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "events",
                    "registrations",
                    "{{registrationId}}",
                    "status"
                  ]
                },
                "description": "Check the status of an event registration"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Event Categories",
          "description": "Endpoints for event category operations",
          "item": [
            {
              "name": "Get All Event Categories",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/events/categories",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "events",
                    "categories"
                  ]
                },
                "description": "Get a list of all event categories"
              },
              "response": []
            },
            {
              "name": "Create Event Category (Admin)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Film Festival\",\n    \"description\": \"Film festival events\",\n    \"icon\": \"film-festival-icon\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/events/categories",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "events",
                    "categories"
                  ]
                },
                "description": "Create a new event category (admin only)"
              },
              "response": []
            },
            {
              "name": "Update Event Category (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Film Festival\",\n    \"description\": \"International film festival events\",\n    \"icon\": \"film-festival-icon-updated\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/events/categories/{{categoryId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "events",
                    "categories",
                    "{{categoryId}}"
                  ]
                },
                "description": "Update an event category (admin only)"
              },
              "response": []
            },
            {
              "name": "Delete Event Category (Admin)",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/events/categories/{{categoryId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "events",
                    "categories",
                    "{{categoryId}}"
                  ]
                },
                "description": "Delete an event category (admin only)"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Event Statistics",
          "description": "Endpoints for event statistics",
          "item": [
            {
              "name": "Get Event Statistics (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/events/statistics",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "events",
                    "statistics"
                  ]
                },
                "description": "Get overall event statistics (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Event Statistics by Category (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/events/statistics/category",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "events",
                    "statistics",
                    "category"
                  ]
                },
                "description": "Get event statistics by category (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Event Attendance Statistics (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/events/statistics/attendance",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "events",
                    "statistics",
                    "attendance"
                  ]
                },
                "description": "Get event attendance statistics (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Event Revenue Statistics (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/events/statistics/revenue",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "events",
                    "statistics",
                    "revenue"
                  ]
                },
                "description": "Get event revenue statistics (admin only)"
              },
              "response": []
            }
          ]
        }
      ]
    },
    {
      "name": "Genres",
      "description": "API endpoints for genres",
      "item": [
        {
          "name": "Authentication",
          "description": "Endpoints for user authentication",
          "item": [
            {
              "name": "Login",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"password123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/login",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "login"
                  ]
                },
                "description": "Login to get authentication token"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Genres",
          "description": "Endpoints for genre operations",
          "item": [
            {
              "name": "Get All Genres",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/genres",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "genres"
                  ]
                },
                "description": "Get a list of all genres"
              },
              "response": []
            },
            {
              "name": "Get Genre by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/genres/{{genreId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "genres",
                    "{{genreId}}"
                  ]
                },
                "description": "Get details of a specific genre by ID"
              },
              "response": []
            },
            {
              "name": "Get Movies by Genre",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/genres/{{genreId}}/movies",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "genres",
                    "{{genreId}}",
                    "movies"
                  ]
                },
                "description": "Get all movies in a specific genre"
              },
              "response": []
            },
            {
              "name": "Get Popular Genres",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/genres/popular?limit=5",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "genres",
                    "popular"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "5"
                    }
                  ]
                },
                "description": "Get most popular genres based on movie count"
              },
              "response": []
            },
            {
              "name": "Create Genre (Admin)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Science Fiction\",\n    \"description\": \"Movies that explore scientific concepts, technology, and the future\",\n    \"icon\": \"sci-fi-icon\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/genres",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "genres"
                  ]
                },
                "description": "Create a new genre (admin only)"
              },
              "response": []
            },
            {
              "name": "Update Genre (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Sci-Fi\",\n    \"description\": \"Updated description for science fiction genre\",\n    \"icon\": \"updated-sci-fi-icon\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/genres/{{genreId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "genres",
                    "{{genreId}}"
                  ]
                },
                "description": "Update an existing genre (admin only)"
              },
              "response": []
            },
            {
              "name": "Delete Genre (Admin)",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/genres/{{genreId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "genres",
                    "{{genreId}}"
                  ]
                },
                "description": "Delete a genre (admin only)"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Movie-Genre Associations",
          "description": "Endpoints for managing movie-genre associations",
          "item": [
            {
              "name": "Add Genre to Movie (Admin)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"genreId\": \"{{genreId}}\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/movies/{{movieId}}/genres",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "movies",
                    "{{movieId}}",
                    "genres"
                  ]
                },
                "description": "Add a genre to a movie (admin only)"
              },
              "response": []
            },
            {
              "name": "Remove Genre from Movie (Admin)",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/movies/{{movieId}}/genres/{{genreId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "movies",
                    "{{movieId}}",
                    "genres",
                    "{{genreId}}"
                  ]
                },
                "description": "Remove a genre from a movie (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Genres for Movie",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/movies/{{movieId}}/genres",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "movies",
                    "{{movieId}}",
                    "genres"
                  ]
                },
                "description": "Get all genres for a specific movie"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Genre Statistics",
          "description": "Endpoints for genre statistics",
          "item": [
            {
              "name": "Get Genre Statistics (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/genres/statistics",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "genres",
                    "statistics"
                  ]
                },
                "description": "Get statistics about genres (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Genre Distribution (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/genres/distribution",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "genres",
                    "distribution"
                  ]
                },
                "description": "Get distribution of movies across genres (admin only)"
              },
              "response": []
            }
          ]
        }
      ]
    },
    {
      "name": "Movies",
      "description": "API endpoints for movies",
      "item": [
        {
          "name": "Authentication",
          "description": "Endpoints for user authentication",
          "item": [
            {
              "name": "Login",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"password123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/login",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "login"
                  ]
                },
                "description": "Login to get authentication token"
              },
              "response": []
            },
            {
              "name": "Register",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Test User\",\n    \"email\": \"testuser@example.com\",\n    \"password\": \"password123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/register",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "register"
                  ]
                },
                "description": "Register a new user"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Movies",
          "description": "Endpoints for movie operations",
          "item": [
            {
              "name": "Get All Movies",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/movies",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "movies"
                  ]
                },
                "description": "Get a list of all movies"
              },
              "response": []
            },
            {
              "name": "Get Movies with Pagination",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/movies?page=1&limit=10",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "movies"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "1"
                    },
                    {
                      "key": "limit",
                      "value": "10"
                    }
                  ]
                },
                "description": "Get a paginated list of movies"
              },
              "response": []
            },
            {
              "name": "Get Movies with Filtering",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/movies?status=Now Playing&genre=Action&minRating=7&sortBy=releaseDate&sortOrder=desc",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "movies"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "Now Playing"
                    },
                    {
                      "key": "genre",
                      "value": "Action"
                    },
                    {
                      "key": "minRating",
                      "value": "7"
                    },
                    {
                      "key": "sortBy",
                      "value": "releaseDate"
                    },
                    {
                      "key": "sortOrder",
                      "value": "desc"
                    }
                  ]
                },
                "description": "Get movies with various filters"
              },
              "response": []
            },
            {
              "name": "Get Movie by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/movies/{{movieId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "movies",
                    "{{movieId}}"
                  ]
                },
                "description": "Get details of a specific movie by ID"
              },
              "response": []
            },
            {
              "name": "Get Movies by Status",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/movies/status/Now Playing",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "movies",
                    "status",
                    "Now Playing"
                  ]
                },
                "description": "Get movies by status (Now Playing, Coming Soon, Featured)"
              },
              "response": []
            },
            {
              "name": "Get Movies by Genre",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/movies/genre/{{genreId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "movies",
                    "genre",
                    "{{genreId}}"
                  ]
                },
                "description": "Get movies by genre ID"
              },
              "response": []
            },
            {
              "name": "Search Movies",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/movies/search?keyword=action",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "movies",
                    "search"
                  ],
                  "query": [
                    {
                      "key": "keyword",
                      "value": "action"
                    }
                  ]
                },
                "description": "Search for movies by keyword"
              },
              "response": []
            },
            {
              "name": "Get Top Rated Movies",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/movies/top-rated?limit=5",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "movies",
                    "top-rated"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "5"
                    }
                  ]
                },
                "description": "Get top rated movies"
              },
              "response": []
            },
            {
              "name": "Get Movie Recommendations",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/movies/{{movieId}}/recommendations",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "movies",
                    "{{movieId}}",
                    "recommendations"
                  ]
                },
                "description": "Get movie recommendations based on a specific movie"
              },
              "response": []
            },
            {
              "name": "Create Movie (Admin)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"Test Movie\",\n    \"description\": \"This is a test movie description\",\n    \"releaseDate\": \"2023-12-25\",\n    \"duration\": 120,\n    \"genres\": [\"Action\", \"Adventure\"],\n    \"director\": \"Test Director\",\n    \"cast\": [\"Actor 1\", \"Actor 2\"],\n    \"poster\": \"https://example.com/poster.jpg\",\n    \"trailer\": \"https://youtube.com/watch?v=test\",\n    \"status\": \"Coming Soon\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/movies",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "movies"
                  ]
                },
                "description": "Create a new movie (admin only)"
              },
              "response": []
            },
            {
              "name": "Update Movie (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"Updated Movie Title\",\n    \"description\": \"Updated movie description\",\n    \"status\": \"Now Playing\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/movies/{{movieId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "movies",
                    "{{movieId}}"
                  ]
                },
                "description": "Update an existing movie (admin only)"
              },
              "response": []
            },
            {
              "name": "Delete Movie (Admin)",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/movies/{{movieId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "movies",
                    "{{movieId}}"
                  ]
                },
                "description": "Delete a movie (admin only)"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Reviews",
          "description": "Endpoints for movie reviews",
          "item": [
            {
              "name": "Get Movie Reviews",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/reviews/movie/{{movieId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "reviews",
                    "movie",
                    "{{movieId}}"
                  ]
                },
                "description": "Get all reviews for a specific movie"
              },
              "response": []
            },
            {
              "name": "Get Review by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/reviews/{{reviewId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "reviews",
                    "{{reviewId}}"
                  ]
                },
                "description": "Get a specific review by ID"
              },
              "response": []
            },
            {
              "name": "Create Review",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"movieId\": \"{{movieId}}\",\n    \"rating\": 8,\n    \"comment\": \"This is a great movie!\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/reviews",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "reviews"
                  ]
                },
                "description": "Create a new review for a movie"
              },
              "response": []
            },
            {
              "name": "Update Review",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"rating\": 9,\n    \"comment\": \"Updated review comment\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/reviews/{{reviewId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "reviews",
                    "{{reviewId}}"
                  ]
                },
                "description": "Update an existing review"
              },
              "response": []
            },
            {
              "name": "Delete Review",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/reviews/{{reviewId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "reviews",
                    "{{reviewId}}"
                  ]
                },
                "description": "Delete a review"
              },
              "response": []
            },
            {
              "name": "Like Review",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/reviews/{{reviewId}}/like",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "reviews",
                    "{{reviewId}}",
                    "like"
                  ]
                },
                "description": "Like a review"
              },
              "response": []
            },
            {
              "name": "Dislike Review",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/reviews/{{reviewId}}/dislike",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "reviews",
                    "{{reviewId}}",
                    "dislike"
                  ]
                },
                "description": "Dislike a review"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Theaters",
          "description": "Endpoints for theaters related to movies",
          "item": [
            {
              "name": "Get Theaters by Movie and Date",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/theaters/movie/{{movieId}}/date/2023-12-25",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "theaters",
                    "movie",
                    "{{movieId}}",
                    "date",
                    "2023-12-25"
                  ]
                },
                "description": "Get theaters showing a specific movie on a specific date"
              },
              "response": []
            },
            {
              "name": "Get All Theaters",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/theaters",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "theaters"
                  ]
                },
                "description": "Get a list of all theaters"
              },
              "response": []
            },
            {
              "name": "Get Theater by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/theaters/{{theaterId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "theaters",
                    "{{theaterId}}"
                  ]
                },
                "description": "Get details of a specific theater"
              },
              "response": []
            },
            {
              "name": "Get Theaters by City",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/theaters/city/New York",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "theaters",
                    "city",
                    "New York"
                  ]
                },
                "description": "Get theaters in a specific city"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Showtimes",
          "description": "Endpoints for movie showtimes",
          "item": [
            {
              "name": "Get Showtimes by Movie and Date",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/showtimes/movie/{{movieId}}/date/2023-12-25",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "showtimes",
                    "movie",
                    "{{movieId}}",
                    "date",
                    "2023-12-25"
                  ]
                },
                "description": "Get showtimes for a specific movie on a specific date"
              },
              "response": []
            },
            {
              "name": "Get Showtimes by Movie, Theater and Date",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/showtimes/movie/{{movieId}}/theater/{{theaterId}}/date/2023-12-25",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "showtimes",
                    "movie",
                    "{{movieId}}",
                    "theater",
                    "{{theaterId}}",
                    "date",
                    "2023-12-25"
                  ]
                },
                "description": "Get showtimes for a specific movie at a specific theater on a specific date"
              },
              "response": []
            },
            {
              "name": "Get Available Seats",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/showtimes/{{showtimeId}}/seats",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "showtimes",
                    "{{showtimeId}}",
                    "seats"
                  ]
                },
                "description": "Get available seats for a specific showtime"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Genres",
          "description": "Endpoints for movie genres",
          "item": [
            {
              "name": "Get All Genres",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/genres",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "genres"
                  ]
                },
                "description": "Get a list of all movie genres"
              },
              "response": []
            },
            {
              "name": "Get Genre by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/genres/{{genreId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "genres",
                    "{{genreId}}"
                  ]
                },
                "description": "Get details of a specific genre"
              },
              "response": []
            },
            {
              "name": "Get Genre by Slug",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/genres/slug/action",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "genres",
                    "slug",
                    "action"
                  ]
                },
                "description": "Get genre details by slug"
              },
              "response": []
            },
            {
              "name": "Get Movies by Genre",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/genres/{{genreId}}/movies",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "genres",
                    "{{genreId}}",
                    "movies"
                  ]
                },
                "description": "Get movies in a specific genre"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Actors",
          "description": "Endpoints for movie actors",
          "item": [
            {
              "name": "Get All Actors",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/actors",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "actors"
                  ]
                },
                "description": "Get a list of all actors"
              },
              "response": []
            },
            {
              "name": "Get Top Actors",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/actors/top",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "actors",
                    "top"
                  ]
                },
                "description": "Get top actors"
              },
              "response": []
            },
            {
              "name": "Get Actor by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/actors/{{actorId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "actors",
                    "{{actorId}}"
                  ]
                },
                "description": "Get details of a specific actor"
              },
              "response": []
            },
            {
              "name": "Get Actor by Slug",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/actors/slug/tom-cruise",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "actors",
                    "slug",
                    "tom-cruise"
                  ]
                },
                "description": "Get actor details by slug"
              },
              "response": []
            },
            {
              "name": "Get Movies by Actor",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/actors/{{actorId}}/movies",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "actors",
                    "{{actorId}}",
                    "movies"
                  ]
                },
                "description": "Get movies featuring a specific actor"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Directors",
          "description": "Endpoints for movie directors",
          "item": [
            {
              "name": "Get All Directors",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/directors",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "directors"
                  ]
                },
                "description": "Get a list of all directors"
              },
              "response": []
            },
            {
              "name": "Get Top Directors",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/directors/top",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "directors",
                    "top"
                  ]
                },
                "description": "Get top directors"
              },
              "response": []
            },
            {
              "name": "Get Director by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/directors/{{directorId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "directors",
                    "{{directorId}}"
                  ]
                },
                "description": "Get details of a specific director"
              },
              "response": []
            },
            {
              "name": "Get Director by Slug",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/directors/slug/christopher-nolan",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "directors",
                    "slug",
                    "christopher-nolan"
                  ]
                },
                "description": "Get director details by slug"
              },
              "response": []
            },
            {
              "name": "Get Movies by Director",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/directors/{{directorId}}/movies",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "directors",
                    "{{directorId}}",
                    "movies"
                  ]
                },
                "description": "Get movies directed by a specific director"
              },
              "response": []
            }
          ]
        }
      ]
    },
    {
      "name": "News",
      "description": "API endpoints for news",
      "item": [
        {
          "name": "Authentication",
          "description": "Endpoints for user authentication",
          "item": [
            {
              "name": "Login",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"password123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/login",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "login"
                  ]
                },
                "description": "Login to get authentication token"
              },
              "response": []
            }
          ]
        },
        {
          "name": "News",
          "description": "Endpoints for news operations",
          "item": [
            {
              "name": "Get All News",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/news",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "news"
                  ]
                },
                "description": "Get a list of all news articles"
              },
              "response": []
            },
            {
              "name": "Get News with Pagination",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/news?page=1&limit=10",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "news"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "1"
                    },
                    {
                      "key": "limit",
                      "value": "10"
                    }
                  ]
                },
                "description": "Get a paginated list of news articles"
              },
              "response": []
            },
            {
              "name": "Get News by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/news/{{newsId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "news",
                    "{{newsId}}"
                  ]
                },
                "description": "Get details of a specific news article by ID"
              },
              "response": []
            },
            {
              "name": "Get Latest News",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/news/latest?limit=5",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "news",
                    "latest"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "5"
                    }
                  ]
                },
                "description": "Get the latest news articles"
              },
              "response": []
            },
            {
              "name": "Get Featured News",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/news/featured",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "news",
                    "featured"
                  ]
                },
                "description": "Get featured news articles"
              },
              "response": []
            },
            {
              "name": "Get News by Category",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/news/category/Movie News",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "news",
                    "category",
                    "Movie News"
                  ]
                },
                "description": "Get news articles by category"
              },
              "response": []
            },
            {
              "name": "Get News by Tag",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/news/tag/marvel",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "news",
                    "tag",
                    "marvel"
                  ]
                },
                "description": "Get news articles by tag"
              },
              "response": []
            },
            {
              "name": "Get News by Date Range",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/news/date-range?startDate={{date}}&endDate=2023-12-31",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "news",
                    "date-range"
                  ],
                  "query": [
                    {
                      "key": "startDate",
                      "value": "{{date}}"
                    },
                    {
                      "key": "endDate",
                      "value": "2023-12-31"
                    }
                  ]
                },
                "description": "Get news articles within a date range"
              },
              "response": []
            },
            {
              "name": "Search News",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/news/search?keyword=marvel",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "news",
                    "search"
                  ],
                  "query": [
                    {
                      "key": "keyword",
                      "value": "marvel"
                    }
                  ]
                },
                "description": "Search for news articles by keyword"
              },
              "response": []
            },
            {
              "name": "Get News Related to Movie",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/news/movie/{{movieId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "news",
                    "movie",
                    "{{movieId}}"
                  ]
                },
                "description": "Get news articles related to a specific movie"
              },
              "response": []
            },
            {
              "name": "Create News (Admin)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"Marvel Announces New Avengers Movie\",\n    \"content\": \"<p>Marvel Studios has announced a new Avengers movie set to release in 2025. The film will feature a new team of heroes following the events of Endgame.</p><p>Kevin Feige, president of Marvel Studios, stated that the new film will 'take the MCU in a bold new direction' and will introduce several new characters to the cinematic universe.</p>\",\n    \"summary\": \"Marvel Studios announces a new Avengers movie set to release in 2025 with a new team of heroes.\",\n    \"category\": \"Movie News\",\n    \"author\": {\n        \"name\": \"John Smith\",\n        \"email\": \"john.smith@example.com\",\n        \"bio\": \"Entertainment reporter with 10 years of experience covering Hollywood news.\"\n    },\n    \"publishDate\": \"2023-12-01T10:00:00Z\",\n    \"image\": \"https://example.com/avengers-news.jpg\",\n    \"featuredImage\": \"https://example.com/avengers-news-featured.jpg\",\n    \"gallery\": [\n        \"https://example.com/avengers-news-1.jpg\",\n        \"https://example.com/avengers-news-2.jpg\"\n    ],\n    \"tags\": [\"marvel\", \"avengers\", \"mcu\", \"upcoming movies\"],\n    \"relatedMovies\": [\"{{movieId}}\"],\n    \"isFeatured\": true,\n    \"status\": \"published\",\n    \"source\": {\n        \"name\": \"Marvel Studios\",\n        \"url\": \"https://www.marvel.com/news\"\n    }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/news",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "news"
                  ]
                },
                "description": "Create a new news article (admin only)"
              },
              "response": []
            },
            {
              "name": "Update News (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"Marvel Announces New Avengers Movie: Heroes Reborn\",\n    \"content\": \"<p>Marvel Studios has announced a new Avengers movie titled 'Heroes Reborn' set to release in 2025. The film will feature a new team of heroes following the events of Endgame.</p><p>Kevin Feige, president of Marvel Studios, stated that the new film will 'take the MCU in a bold new direction' and will introduce several new characters to the cinematic universe.</p><p>Production is set to begin in early 2024 with a star-studded cast that will be announced in the coming months.</p>\",\n    \"summary\": \"Marvel Studios announces a new Avengers movie titled 'Heroes Reborn' set to release in 2025 with a new team of heroes.\",\n    \"tags\": [\"marvel\", \"avengers\", \"mcu\", \"upcoming movies\", \"heroes reborn\"],\n    \"isFeatured\": true,\n    \"status\": \"published\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/news/{{newsId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "news",
                    "{{newsId}}"
                  ]
                },
                "description": "Update an existing news article (admin only)"
              },
              "response": []
            },
            {
              "name": "Delete News (Admin)",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/news/{{newsId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "news",
                    "{{newsId}}"
                  ]
                },
                "description": "Delete a news article (admin only)"
              },
              "response": []
            },
            {
              "name": "Update News Status (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"status\": \"draft\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/news/{{newsId}}/status",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "news",
                    "{{newsId}}",
                    "status"
                  ]
                },
                "description": "Update the status of a news article (admin only)"
              },
              "response": []
            },
            {
              "name": "Update News Featured Status (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"isFeatured\": true\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/news/{{newsId}}/featured",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "news",
                    "{{newsId}}",
                    "featured"
                  ]
                },
                "description": "Update the featured status of a news article (admin only)"
              },
              "response": []
            }
          ]
        },
        {
          "name": "News Comments",
          "description": "Endpoints for news comment operations",
          "item": [
            {
              "name": "Get News Comments",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/news/{{newsId}}/comments",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "news",
                    "{{newsId}}",
                    "comments"
                  ]
                },
                "description": "Get all comments for a specific news article"
              },
              "response": []
            },
            {
              "name": "Add Comment to News",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"content\": \"I'm really excited for this new Avengers movie! Can't wait to see who will be in the new team.\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/news/{{newsId}}/comments",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "news",
                    "{{newsId}}",
                    "comments"
                  ]
                },
                "description": "Add a comment to a news article"
              },
              "response": []
            },
            {
              "name": "Update Comment",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"content\": \"I'm really excited for this new Avengers movie! Can't wait to see who will be in the new team. I hope they bring back some of the original cast too.\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/news/comments/{{commentId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "news",
                    "comments",
                    "{{commentId}}"
                  ]
                },
                "description": "Update a comment"
              },
              "response": []
            },
            {
              "name": "Delete Comment",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/news/comments/{{commentId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "news",
                    "comments",
                    "{{commentId}}"
                  ]
                },
                "description": "Delete a comment"
              },
              "response": []
            },
            {
              "name": "Like Comment",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/news/comments/{{commentId}}/like",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "news",
                    "comments",
                    "{{commentId}}",
                    "like"
                  ]
                },
                "description": "Like a comment"
              },
              "response": []
            },
            {
              "name": "Unlike Comment",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/news/comments/{{commentId}}/like",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "news",
                    "comments",
                    "{{commentId}}",
                    "like"
                  ]
                },
                "description": "Unlike a comment"
              },
              "response": []
            },
            {
              "name": "Report Comment",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"reason\": \"Inappropriate content\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/news/comments/{{commentId}}/report",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "news",
                    "comments",
                    "{{commentId}}",
                    "report"
                  ]
                },
                "description": "Report a comment"
              },
              "response": []
            }
          ]
        },
        {
          "name": "News Categories",
          "description": "Endpoints for news category operations",
          "item": [
            {
              "name": "Get All News Categories",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/news/categories",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "news",
                    "categories"
                  ]
                },
                "description": "Get a list of all news categories"
              },
              "response": []
            },
            {
              "name": "Create News Category (Admin)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Industry News\",\n    \"description\": \"News about the film industry\",\n    \"icon\": \"industry-news-icon\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/news/categories",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "news",
                    "categories"
                  ]
                },
                "description": "Create a new news category (admin only)"
              },
              "response": []
            },
            {
              "name": "Update News Category (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Industry News\",\n    \"description\": \"News and updates about the film and entertainment industry\",\n    \"icon\": \"industry-news-icon-updated\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/news/categories/{{categoryId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "news",
                    "categories",
                    "{{categoryId}}"
                  ]
                },
                "description": "Update a news category (admin only)"
              },
              "response": []
            },
            {
              "name": "Delete News Category (Admin)",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/news/categories/{{categoryId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "news",
                    "categories",
                    "{{categoryId}}"
                  ]
                },
                "description": "Delete a news category (admin only)"
              },
              "response": []
            }
          ]
        },
        {
          "name": "News Statistics",
          "description": "Endpoints for news statistics",
          "item": [
            {
              "name": "Get News Statistics (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/news/statistics",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "news",
                    "statistics"
                  ]
                },
                "description": "Get overall news statistics (admin only)"
              },
              "response": []
            },
            {
              "name": "Get News Statistics by Category (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/news/statistics/category",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "news",
                    "statistics",
                    "category"
                  ]
                },
                "description": "Get news statistics by category (admin only)"
              },
              "response": []
            },
            {
              "name": "Get News Engagement Statistics (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/news/statistics/engagement",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "news",
                    "statistics",
                    "engagement"
                  ]
                },
                "description": "Get news engagement statistics (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Most Popular News (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/news/statistics/popular?limit=5",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "news",
                    "statistics",
                    "popular"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "5"
                    }
                  ]
                },
                "description": "Get most popular news articles (admin only)"
              },
              "response": []
            }
          ]
        }
      ]
    },
    {
      "name": "Orders",
      "description": "API endpoints for orders",
      "item": [
        {
          "name": "Authentication",
          "description": "Endpoints for user authentication",
          "item": [
            {
              "name": "Login",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"password123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/login",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "login"
                  ]
                },
                "description": "Login to get authentication token"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Orders",
          "description": "Endpoints for order operations",
          "item": [
            {
              "name": "Get All Orders (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/orders",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "orders"
                  ]
                },
                "description": "Get a list of all orders (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Orders with Pagination (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/orders?page=1&limit=10",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "orders"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "1"
                    },
                    {
                      "key": "limit",
                      "value": "10"
                    }
                  ]
                },
                "description": "Get a paginated list of orders (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Order by ID",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/orders/{{orderId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "orders",
                    "{{orderId}}"
                  ]
                },
                "description": "Get details of a specific order by ID"
              },
              "response": []
            },
            {
              "name": "Get My Orders",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/orders/my-orders",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "orders",
                    "my-orders"
                  ]
                },
                "description": "Get all orders for the authenticated user"
              },
              "response": []
            },
            {
              "name": "Get Orders by User (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/orders/user/{{userId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "orders",
                    "user",
                    "{{userId}}"
                  ]
                },
                "description": "Get all orders for a specific user (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Orders by Status (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/orders/status/pending",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "orders",
                    "status",
                    "pending"
                  ]
                },
                "description": "Get all orders with a specific status (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Orders by Date Range (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/orders/date-range?startDate={{date}}&endDate=2023-12-31",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "orders",
                    "date-range"
                  ],
                  "query": [
                    {
                      "key": "startDate",
                      "value": "{{date}}"
                    },
                    {
                      "key": "endDate",
                      "value": "2023-12-31"
                    }
                  ]
                },
                "description": "Get all orders within a date range (admin only)"
              },
              "response": []
            },
            {
              "name": "Create Order",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"items\": [\n        {\n            \"productId\": \"{{productId}}\",\n            \"quantity\": 2,\n            \"price\": 8.99\n        },\n        {\n            \"productId\": \"{{productId2}}\",\n            \"quantity\": 1,\n            \"price\": 4.99\n        }\n    ],\n    \"totalAmount\": 22.97,\n    \"bookingId\": \"{{bookingId}}\",\n    \"pickupTime\": \"2023-12-25T19:00:00Z\",\n    \"specialInstructions\": \"Extra butter on popcorn\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/orders",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "orders"
                  ]
                },
                "description": "Create a new order"
              },
              "response": []
            },
            {
              "name": "Update Order Status (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"status\": \"processing\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/orders/{{orderId}}/status",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "orders",
                    "{{orderId}}",
                    "status"
                  ]
                },
                "description": "Update the status of an order (admin only)"
              },
              "response": []
            },
            {
              "name": "Cancel Order",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"reason\": \"Changed my mind\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/orders/{{orderId}}/cancel",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "orders",
                    "{{orderId}}",
                    "cancel"
                  ]
                },
                "description": "Cancel an order"
              },
              "response": []
            },
            {
              "name": "Update Order Items (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"items\": [\n        {\n            \"productId\": \"{{productId}}\",\n            \"quantity\": 3,\n            \"price\": 8.99\n        },\n        {\n            \"productId\": \"{{productId2}}\",\n            \"quantity\": 2,\n            \"price\": 4.99\n        }\n    ],\n    \"totalAmount\": 36.95\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/orders/{{orderId}}/items",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "orders",
                    "{{orderId}}",
                    "items"
                  ]
                },
                "description": "Update the items in an order (admin only)"
              },
              "response": []
            },
            {
              "name": "Delete Order (Admin)",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/orders/{{orderId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "orders",
                    "{{orderId}}"
                  ]
                },
                "description": "Delete an order (admin only)"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Order Items",
          "description": "Endpoints for managing order items",
          "item": [
            {
              "name": "Add Item to Order",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"productId\": \"{{productId3}}\",\n    \"quantity\": 1,\n    \"price\": 6.99\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/orders/{{orderId}}/items",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "orders",
                    "{{orderId}}",
                    "items"
                  ]
                },
                "description": "Add a new item to an existing order"
              },
              "response": []
            },
            {
              "name": "Update Item Quantity",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"quantity\": 3\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/orders/{{orderId}}/items/{{orderItemId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "orders",
                    "{{orderId}}",
                    "items",
                    "{{orderItemId}}"
                  ]
                },
                "description": "Update the quantity of an item in an order"
              },
              "response": []
            },
            {
              "name": "Remove Item from Order",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/orders/{{orderId}}/items/{{orderItemId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "orders",
                    "{{orderId}}",
                    "items",
                    "{{orderItemId}}"
                  ]
                },
                "description": "Remove an item from an order"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Order Payment",
          "description": "Endpoints for order payment operations",
          "item": [
            {
              "name": "Process Order Payment",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"paymentMethod\": \"credit_card\",\n    \"paymentDetails\": {\n        \"cardNumber\": \"**** **** **** 1234\",\n        \"cardHolder\": \"Test User\",\n        \"expiryDate\": \"12/25\",\n        \"cvv\": \"***\"\n    },\n    \"amount\": 22.97\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/orders/{{orderId}}/payment",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "orders",
                    "{{orderId}}",
                    "payment"
                  ]
                },
                "description": "Process payment for an order"
              },
              "response": []
            },
            {
              "name": "Get Order Payment Status",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/orders/{{orderId}}/payment",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "orders",
                    "{{orderId}}",
                    "payment"
                  ]
                },
                "description": "Get the payment status of an order"
              },
              "response": []
            },
            {
              "name": "Refund Order Payment (Admin)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"amount\": 22.97,\n    \"reason\": \"Customer request\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/orders/{{orderId}}/refund",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "orders",
                    "{{orderId}}",
                    "refund"
                  ]
                },
                "description": "Process a refund for an order payment (admin only)"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Order Statistics",
          "description": "Endpoints for order statistics",
          "item": [
            {
              "name": "Get Order Statistics (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/orders/statistics",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "orders",
                    "statistics"
                  ]
                },
                "description": "Get overall order statistics (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Order Statistics by Date Range (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/orders/statistics/date-range?startDate={{date}}&endDate=2023-12-31",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "orders",
                    "statistics",
                    "date-range"
                  ],
                  "query": [
                    {
                      "key": "startDate",
                      "value": "{{date}}"
                    },
                    {
                      "key": "endDate",
                      "value": "2023-12-31"
                    }
                  ]
                },
                "description": "Get order statistics for a specific date range (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Top Selling Products (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/orders/statistics/top-products?limit=5",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "orders",
                    "statistics",
                    "top-products"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "5"
                    }
                  ]
                },
                "description": "Get top selling products based on orders (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Order Revenue (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/orders/statistics/revenue?startDate={{date}}&endDate=2023-12-31",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "orders",
                    "statistics",
                    "revenue"
                  ],
                  "query": [
                    {
                      "key": "startDate",
                      "value": "{{date}}"
                    },
                    {
                      "key": "endDate",
                      "value": "2023-12-31"
                    }
                  ]
                },
                "description": "Get revenue statistics from orders (admin only)"
              },
              "response": []
            }
          ]
        }
      ]
    },
    {
      "name": "Payments",
      "description": "API endpoints for payments",
      "item": [
        {
          "name": "Authentication",
          "description": "Endpoints for user authentication",
          "item": [
            {
              "name": "Login",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"password123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/login",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "login"
                  ]
                },
                "description": "Login to get authentication token"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Payments",
          "description": "Endpoints for payment operations",
          "item": [
            {
              "name": "Get All Payments (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/payments",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "payments"
                  ]
                },
                "description": "Get a list of all payments (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Payments with Pagination (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/payments?page=1&limit=10",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "payments"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "1"
                    },
                    {
                      "key": "limit",
                      "value": "10"
                    }
                  ]
                },
                "description": "Get a paginated list of payments (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Payment by ID",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/payments/{{paymentId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "payments",
                    "{{paymentId}}"
                  ]
                },
                "description": "Get details of a specific payment by ID"
              },
              "response": []
            },
            {
              "name": "Get My Payments",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/payments/my-payments",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "payments",
                    "my-payments"
                  ]
                },
                "description": "Get all payments for the authenticated user"
              },
              "response": []
            },
            {
              "name": "Get Payments by User (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/payments/user/{{userId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "payments",
                    "user",
                    "{{userId}}"
                  ]
                },
                "description": "Get all payments for a specific user (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Payments by Booking",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/payments/booking/{{bookingId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "payments",
                    "booking",
                    "{{bookingId}}"
                  ]
                },
                "description": "Get all payments for a specific booking"
              },
              "response": []
            },
            {
              "name": "Get Payments by Date Range (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/payments/date-range?startDate=2023-12-01&endDate=2023-12-31",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "payments",
                    "date-range"
                  ],
                  "query": [
                    {
                      "key": "startDate",
                      "value": "2023-12-01"
                    },
                    {
                      "key": "endDate",
                      "value": "2023-12-31"
                    }
                  ]
                },
                "description": "Get all payments within a date range (admin only)"
              },
              "response": []
            },
            {
              "name": "Process Payment",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"bookingId\": \"{{bookingId}}\",\n    \"amount\": 20,\n    \"paymentMethod\": \"credit_card\",\n    \"paymentDetails\": {\n        \"cardNumber\": \"**** **** **** 1234\",\n        \"cardHolder\": \"Test User\",\n        \"expiryDate\": \"12/25\",\n        \"cvv\": \"***\"\n    }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/payments/process",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "payments",
                    "process"
                  ]
                },
                "description": "Process a payment for a booking"
              },
              "response": []
            },
            {
              "name": "Verify Payment",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/payments/{{paymentId}}/verify",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "payments",
                    "{{paymentId}}",
                    "verify"
                  ]
                },
                "description": "Verify the status of a payment"
              },
              "response": []
            },
            {
              "name": "Process Refund",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"paymentId\": \"{{paymentId}}\",\n    \"amount\": 20,\n    \"reason\": \"Customer request\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/payments/refund",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "payments",
                    "refund"
                  ]
                },
                "description": "Process a refund for a payment (admin only)"
              },
              "response": []
            },
            {
              "name": "Update Payment Status (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"status\": \"completed\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/payments/{{paymentId}}/status",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "payments",
                    "{{paymentId}}",
                    "status"
                  ]
                },
                "description": "Update the status of a payment (admin only)"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Payment Methods",
          "description": "Endpoints for payment method operations",
          "item": [
            {
              "name": "Get My Payment Methods",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/payments/methods",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "payments",
                    "methods"
                  ]
                },
                "description": "Get all payment methods for the authenticated user"
              },
              "response": []
            },
            {
              "name": "Add Payment Method",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"type\": \"credit_card\",\n    \"details\": {\n        \"cardNumber\": \"4111111111111111\",\n        \"cardHolder\": \"Test User\",\n        \"expiryDate\": \"12/25\",\n        \"cvv\": \"123\"\n    },\n    \"isDefault\": true\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/payments/methods",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "payments",
                    "methods"
                  ]
                },
                "description": "Add a new payment method for the authenticated user"
              },
              "response": []
            },
            {
              "name": "Update Payment Method",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"details\": {\n        \"cardHolder\": \"Updated Name\",\n        \"expiryDate\": \"12/26\"\n    },\n    \"isDefault\": true\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/payments/methods/{{paymentMethodId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "payments",
                    "methods",
                    "{{paymentMethodId}}"
                  ]
                },
                "description": "Update an existing payment method"
              },
              "response": []
            },
            {
              "name": "Delete Payment Method",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/payments/methods/{{paymentMethodId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "payments",
                    "methods",
                    "{{paymentMethodId}}"
                  ]
                },
                "description": "Delete a payment method"
              },
              "response": []
            },
            {
              "name": "Set Default Payment Method",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/payments/methods/{{paymentMethodId}}/default",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "payments",
                    "methods",
                    "{{paymentMethodId}}",
                    "default"
                  ]
                },
                "description": "Set a payment method as the default"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Payment Statistics",
          "description": "Endpoints for payment statistics",
          "item": [
            {
              "name": "Get Payment Statistics (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/payments/statistics",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "payments",
                    "statistics"
                  ]
                },
                "description": "Get overall payment statistics (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Payment Statistics by Date Range (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/payments/statistics/date-range?startDate=2023-12-01&endDate=2023-12-31",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "payments",
                    "statistics",
                    "date-range"
                  ],
                  "query": [
                    {
                      "key": "startDate",
                      "value": "2023-12-01"
                    },
                    {
                      "key": "endDate",
                      "value": "2023-12-31"
                    }
                  ]
                },
                "description": "Get payment statistics for a specific date range (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Payment Method Distribution (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/payments/statistics/methods",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "payments",
                    "statistics",
                    "methods"
                  ]
                },
                "description": "Get distribution of payment methods used (admin only)"
              },
              "response": []
            }
          ]
        }
      ]
    },
    {
      "name": "Products",
      "description": "API endpoints for products",
      "item": [
        {
          "name": "Authentication",
          "description": "Endpoints for user authentication",
          "item": [
            {
              "name": "Login",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"password123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/login",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "login"
                  ]
                },
                "description": "Login to get authentication token"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Products",
          "description": "Endpoints for product operations",
          "item": [
            {
              "name": "Get All Products",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/products",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "products"
                  ]
                },
                "description": "Get a list of all products"
              },
              "response": []
            },
            {
              "name": "Get Products with Pagination",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/products?page=1&limit=10",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "products"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "1"
                    },
                    {
                      "key": "limit",
                      "value": "10"
                    }
                  ]
                },
                "description": "Get a paginated list of products"
              },
              "response": []
            },
            {
              "name": "Get Product by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/products/{{productId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "products",
                    "{{productId}}"
                  ]
                },
                "description": "Get details of a specific product by ID"
              },
              "response": []
            },
            {
              "name": "Get Products by Category",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/products/category/Food",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "products",
                    "category",
                    "Food"
                  ]
                },
                "description": "Get all products in a specific category"
              },
              "response": []
            },
            {
              "name": "Get Featured Products",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/products/featured",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "products",
                    "featured"
                  ]
                },
                "description": "Get all featured products"
              },
              "response": []
            },
            {
              "name": "Search Products",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/products/search?keyword=popcorn",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "products",
                    "search"
                  ],
                  "query": [
                    {
                      "key": "keyword",
                      "value": "popcorn"
                    }
                  ]
                },
                "description": "Search for products by keyword"
              },
              "response": []
            },
            {
              "name": "Create Product (Admin)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Large Popcorn\",\n    \"description\": \"Freshly popped popcorn in a large bucket\",\n    \"category\": \"Food\",\n    \"price\": 8.99,\n    \"discountPrice\": 7.99,\n    \"image\": \"https://example.com/popcorn.jpg\",\n    \"isAvailable\": true,\n    \"isFeatured\": true,\n    \"attributes\": {\n        \"size\": \"Large\",\n        \"calories\": 600,\n        \"ingredients\": [\"Corn\", \"Oil\", \"Salt\"]\n    },\n    \"stock\": 100\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/products",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "products"
                  ]
                },
                "description": "Create a new product (admin only)"
              },
              "response": []
            },
            {
              "name": "Update Product (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Large Buttered Popcorn\",\n    \"description\": \"Freshly popped popcorn with butter in a large bucket\",\n    \"price\": 9.99,\n    \"discountPrice\": 8.99,\n    \"isAvailable\": true,\n    \"isFeatured\": true,\n    \"attributes\": {\n        \"size\": \"Large\",\n        \"calories\": 800,\n        \"ingredients\": [\"Corn\", \"Oil\", \"Salt\", \"Butter\"]\n    },\n    \"stock\": 80\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/products/{{productId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "products",
                    "{{productId}}"
                  ]
                },
                "description": "Update an existing product (admin only)"
              },
              "response": []
            },
            {
              "name": "Delete Product (Admin)",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/products/{{productId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "products",
                    "{{productId}}"
                  ]
                },
                "description": "Delete a product (admin only)"
              },
              "response": []
            },
            {
              "name": "Update Product Stock (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"stock\": 120\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/products/{{productId}}/stock",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "products",
                    "{{productId}}",
                    "stock"
                  ]
                },
                "description": "Update the stock of a product (admin only)"
              },
              "response": []
            },
            {
              "name": "Update Product Availability (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"isAvailable\": false\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/products/{{productId}}/availability",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "products",
                    "{{productId}}",
                    "availability"
                  ]
                },
                "description": "Update the availability of a product (admin only)"
              },
              "response": []
            },
            {
              "name": "Update Product Featured Status (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"isFeatured\": true\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/products/{{productId}}/featured",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "products",
                    "{{productId}}",
                    "featured"
                  ]
                },
                "description": "Update the featured status of a product (admin only)"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Product Categories",
          "description": "Endpoints for product category operations",
          "item": [
            {
              "name": "Get All Categories",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/products/categories",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "products",
                    "categories"
                  ]
                },
                "description": "Get a list of all product categories"
              },
              "response": []
            },
            {
              "name": "Create Category (Admin)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Beverages\",\n    \"description\": \"Drinks and beverages\",\n    \"icon\": \"drink-icon\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/products/categories",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "products",
                    "categories"
                  ]
                },
                "description": "Create a new product category (admin only)"
              },
              "response": []
            },
            {
              "name": "Update Category (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Drinks\",\n    \"description\": \"Soft drinks, water, and other beverages\",\n    \"icon\": \"beverage-icon\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/products/categories/{{categoryId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "products",
                    "categories",
                    "{{categoryId}}"
                  ]
                },
                "description": "Update an existing product category (admin only)"
              },
              "response": []
            },
            {
              "name": "Delete Category (Admin)",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/products/categories/{{categoryId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "products",
                    "categories",
                    "{{categoryId}}"
                  ]
                },
                "description": "Delete a product category (admin only)"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Product Combos",
          "description": "Endpoints for product combo operations",
          "item": [
            {
              "name": "Get All Combos",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/products/combos",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "products",
                    "combos"
                  ]
                },
                "description": "Get a list of all product combos"
              },
              "response": []
            },
            {
              "name": "Get Combo by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/products/combos/{{comboId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "products",
                    "combos",
                    "{{comboId}}"
                  ]
                },
                "description": "Get details of a specific combo by ID"
              },
              "response": []
            },
            {
              "name": "Create Combo (Admin)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Movie Night Combo\",\n    \"description\": \"Large popcorn, large drink, and candy\",\n    \"products\": [\n        {\n            \"productId\": \"{{productId}}\",\n            \"quantity\": 1\n        },\n        {\n            \"productId\": \"{{productId2}}\",\n            \"quantity\": 1\n        },\n        {\n            \"productId\": \"{{productId3}}\",\n            \"quantity\": 1\n        }\n    ],\n    \"price\": 19.99,\n    \"discountPrice\": 16.99,\n    \"image\": \"https://example.com/combo.jpg\",\n    \"isAvailable\": true,\n    \"isFeatured\": true\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/products/combos",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "products",
                    "combos"
                  ]
                },
                "description": "Create a new product combo (admin only)"
              },
              "response": []
            },
            {
              "name": "Update Combo (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Ultimate Movie Night Combo\",\n    \"description\": \"Large popcorn, two large drinks, and candy\",\n    \"products\": [\n        {\n            \"productId\": \"{{productId}}\",\n            \"quantity\": 1\n        },\n        {\n            \"productId\": \"{{productId2}}\",\n            \"quantity\": 2\n        },\n        {\n            \"productId\": \"{{productId3}}\",\n            \"quantity\": 1\n        }\n    ],\n    \"price\": 24.99,\n    \"discountPrice\": 19.99,\n    \"isAvailable\": true,\n    \"isFeatured\": true\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/products/combos/{{comboId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "products",
                    "combos",
                    "{{comboId}}"
                  ]
                },
                "description": "Update an existing product combo (admin only)"
              },
              "response": []
            },
            {
              "name": "Delete Combo (Admin)",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/products/combos/{{comboId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "products",
                    "combos",
                    "{{comboId}}"
                  ]
                },
                "description": "Delete a product combo (admin only)"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Product Statistics",
          "description": "Endpoints for product statistics",
          "item": [
            {
              "name": "Get Product Sales Statistics (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/products/statistics/sales",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "products",
                    "statistics",
                    "sales"
                  ]
                },
                "description": "Get overall product sales statistics (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Product Sales by Date Range (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/products/statistics/sales/date-range?startDate={{date}}&endDate=2023-12-31",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "products",
                    "statistics",
                    "sales",
                    "date-range"
                  ],
                  "query": [
                    {
                      "key": "startDate",
                      "value": "{{date}}"
                    },
                    {
                      "key": "endDate",
                      "value": "2023-12-31"
                    }
                  ]
                },
                "description": "Get product sales statistics for a specific date range (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Top Selling Products (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/products/statistics/top-selling?limit=5",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "products",
                    "statistics",
                    "top-selling"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "5"
                    }
                  ]
                },
                "description": "Get top selling products (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Product Inventory Statistics (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/products/statistics/inventory",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "products",
                    "statistics",
                    "inventory"
                  ]
                },
                "description": "Get product inventory statistics (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Low Stock Products (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/products/statistics/low-stock?threshold=10",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "products",
                    "statistics",
                    "low-stock"
                  ],
                  "query": [
                    {
                      "key": "threshold",
                      "value": "10"
                    }
                  ]
                },
                "description": "Get products with low stock (admin only)"
              },
              "response": []
            }
          ]
        }
      ]
    },
    {
      "name": "Reviews",
      "description": "API endpoints for reviews",
      "item": [
        {
          "name": "Authentication",
          "description": "Endpoints for user authentication",
          "item": [
            {
              "name": "Login",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"password123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/login",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "login"
                  ]
                },
                "description": "Login to get authentication token"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Reviews",
          "description": "Endpoints for review operations",
          "item": [
            {
              "name": "Get All Reviews (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/reviews",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "reviews"
                  ]
                },
                "description": "Get a list of all reviews (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Reviews with Pagination",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/reviews?page=1&limit=10",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "reviews"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "1"
                    },
                    {
                      "key": "limit",
                      "value": "10"
                    }
                  ]
                },
                "description": "Get a paginated list of reviews"
              },
              "response": []
            },
            {
              "name": "Get Review by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/reviews/{{reviewId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "reviews",
                    "{{reviewId}}"
                  ]
                },
                "description": "Get details of a specific review by ID"
              },
              "response": []
            },
            {
              "name": "Get Reviews by Movie",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/reviews/movie/{{movieId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "reviews",
                    "movie",
                    "{{movieId}}"
                  ]
                },
                "description": "Get all reviews for a specific movie"
              },
              "response": []
            },
            {
              "name": "Get Reviews by User",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/reviews/user/{{userId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "reviews",
                    "user",
                    "{{userId}}"
                  ]
                },
                "description": "Get all reviews by a specific user (admin only)"
              },
              "response": []
            },
            {
              "name": "Get My Reviews",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/reviews/my-reviews",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "reviews",
                    "my-reviews"
                  ]
                },
                "description": "Get all reviews by the authenticated user"
              },
              "response": []
            },
            {
              "name": "Get Top Rated Reviews",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/reviews/top-rated?limit=5",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "reviews",
                    "top-rated"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "5"
                    }
                  ]
                },
                "description": "Get top rated reviews"
              },
              "response": []
            },
            {
              "name": "Create Review",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"movieId\": \"{{movieId}}\",\n    \"rating\": 8,\n    \"title\": \"Great movie!\",\n    \"content\": \"This is a detailed review of the movie. I really enjoyed it and would recommend it to others.\",\n    \"tags\": [\"action\", \"thriller\"]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/reviews",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "reviews"
                  ]
                },
                "description": "Create a new review for a movie"
              },
              "response": []
            },
            {
              "name": "Update Review",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"rating\": 9,\n    \"title\": \"Updated title\",\n    \"content\": \"Updated review content\",\n    \"tags\": [\"action\", \"adventure\"]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/reviews/{{reviewId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "reviews",
                    "{{reviewId}}"
                  ]
                },
                "description": "Update an existing review"
              },
              "response": []
            },
            {
              "name": "Delete Review",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/reviews/{{reviewId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "reviews",
                    "{{reviewId}}"
                  ]
                },
                "description": "Delete a review"
              },
              "response": []
            },
            {
              "name": "Like Review",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/reviews/{{reviewId}}/like",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "reviews",
                    "{{reviewId}}",
                    "like"
                  ]
                },
                "description": "Like a review"
              },
              "response": []
            },
            {
              "name": "Unlike Review",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/reviews/{{reviewId}}/unlike",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "reviews",
                    "{{reviewId}}",
                    "unlike"
                  ]
                },
                "description": "Remove a like from a review"
              },
              "response": []
            },
            {
              "name": "Dislike Review",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/reviews/{{reviewId}}/dislike",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "reviews",
                    "{{reviewId}}",
                    "dislike"
                  ]
                },
                "description": "Dislike a review"
              },
              "response": []
            },
            {
              "name": "Undislike Review",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/reviews/{{reviewId}}/undislike",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "reviews",
                    "{{reviewId}}",
                    "undislike"
                  ]
                },
                "description": "Remove a dislike from a review"
              },
              "response": []
            },
            {
              "name": "Flag Review (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"reason\": \"Inappropriate content\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/reviews/{{reviewId}}/flag",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "reviews",
                    "{{reviewId}}",
                    "flag"
                  ]
                },
                "description": "Flag a review as inappropriate (admin only)"
              },
              "response": []
            },
            {
              "name": "Unflag Review (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/reviews/{{reviewId}}/unflag",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "reviews",
                    "{{reviewId}}",
                    "unflag"
                  ]
                },
                "description": "Remove a flag from a review (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Flagged Reviews (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/reviews/flagged",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "reviews",
                    "flagged"
                  ]
                },
                "description": "Get all flagged reviews (admin only)"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Review Comments",
          "description": "Endpoints for review comments",
          "item": [
            {
              "name": "Get Comments for Review",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/reviews/{{reviewId}}/comments",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "reviews",
                    "{{reviewId}}",
                    "comments"
                  ]
                },
                "description": "Get all comments for a specific review"
              },
              "response": []
            },
            {
              "name": "Add Comment to Review",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"content\": \"I agree with this review!\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/reviews/{{reviewId}}/comments",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "reviews",
                    "{{reviewId}}",
                    "comments"
                  ]
                },
                "description": "Add a comment to a review"
              },
              "response": []
            },
            {
              "name": "Update Comment",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"content\": \"Updated comment content\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/reviews/comments/{{commentId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "reviews",
                    "comments",
                    "{{commentId}}"
                  ]
                },
                "description": "Update an existing comment"
              },
              "response": []
            },
            {
              "name": "Delete Comment",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/reviews/comments/{{commentId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "reviews",
                    "comments",
                    "{{commentId}}"
                  ]
                },
                "description": "Delete a comment"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Review Statistics",
          "description": "Endpoints for review statistics",
          "item": [
            {
              "name": "Get Movie Rating Statistics",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/reviews/statistics/movie/{{movieId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "reviews",
                    "statistics",
                    "movie",
                    "{{movieId}}"
                  ]
                },
                "description": "Get rating statistics for a specific movie"
              },
              "response": []
            },
            {
              "name": "Get Overall Review Statistics (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/reviews/statistics",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "reviews",
                    "statistics"
                  ]
                },
                "description": "Get overall review statistics (admin only)"
              },
              "response": []
            }
          ]
        }
      ]
    },
    {
      "name": "Rooms",
      "description": "API endpoints for rooms",
      "item": [
        {
          "name": "Authentication",
          "description": "Endpoints for user authentication",
          "item": [
            {
              "name": "Login",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"password123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/login",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "login"
                  ]
                },
                "description": "Login to get authentication token"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Rooms",
          "description": "Endpoints for room operations",
          "item": [
            {
              "name": "Get All Rooms",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/rooms",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "rooms"
                  ]
                },
                "description": "Get a list of all rooms (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Rooms with Pagination",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/rooms?page=1&limit=10",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "rooms"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "1"
                    },
                    {
                      "key": "limit",
                      "value": "10"
                    }
                  ]
                },
                "description": "Get a paginated list of rooms (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Room by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/rooms/{{roomId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "rooms",
                    "{{roomId}}"
                  ]
                },
                "description": "Get details of a specific room by ID"
              },
              "response": []
            },
            {
              "name": "Get Rooms by Theater",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/rooms/theater/{{theaterId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "rooms",
                    "theater",
                    "{{theaterId}}"
                  ]
                },
                "description": "Get all rooms in a specific theater"
              },
              "response": []
            },
            {
              "name": "Get Rooms by Type",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/rooms/type/IMAX",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "rooms",
                    "type",
                    "IMAX"
                  ]
                },
                "description": "Get all rooms of a specific type"
              },
              "response": []
            },
            {
              "name": "Create Room (Admin)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"IMAX Theater\",\n    \"theater_id\": \"{{theaterId}}\",\n    \"capacity\": 200,\n    \"type\": \"IMAX\",\n    \"layout\": {\n        \"rows\": 10,\n        \"columns\": 20\n    },\n    \"seats\": [],\n    \"isActive\": true,\n    \"specialFeatures\": [\"Dolby Atmos\", \"Recliner Seats\"],\n    \"maintenanceSchedule\": {\n        \"lastMaintenance\": \"2023-01-01\",\n        \"nextMaintenance\": \"2023-06-01\"\n    }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/rooms",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "rooms"
                  ]
                },
                "description": "Create a new room (admin only)"
              },
              "response": []
            },
            {
              "name": "Update Room (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"IMAX Theater - Updated\",\n    \"capacity\": 220,\n    \"type\": \"IMAX\",\n    \"isActive\": true,\n    \"specialFeatures\": [\"Dolby Atmos\", \"Recliner Seats\", \"4K Projection\"],\n    \"maintenanceSchedule\": {\n        \"lastMaintenance\": \"2023-01-15\",\n        \"nextMaintenance\": \"2023-07-15\"\n    }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/rooms/{{roomId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "rooms",
                    "{{roomId}}"
                  ]
                },
                "description": "Update an existing room (admin only)"
              },
              "response": []
            },
            {
              "name": "Delete Room (Admin)",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/rooms/{{roomId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "rooms",
                    "{{roomId}}"
                  ]
                },
                "description": "Delete a room (admin only)"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Room Seats",
          "description": "Endpoints for managing room seats",
          "item": [
            {
              "name": "Get Room Seat Layout",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/rooms/{{roomId}}/seats",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "rooms",
                    "{{roomId}}",
                    "seats"
                  ]
                },
                "description": "Get the seat layout for a specific room"
              },
              "response": []
            },
            {
              "name": "Update Room Seat Layout (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"layout\": {\n        \"rows\": 10,\n        \"columns\": 20\n    },\n    \"seats\": [\n        {\n            \"row\": \"A\",\n            \"column\": 1,\n            \"seatNumber\": \"A1\",\n            \"type\": \"standard\",\n            \"price\": 10,\n            \"isActive\": true\n        },\n        {\n            \"row\": \"A\",\n            \"column\": 2,\n            \"seatNumber\": \"A2\",\n            \"type\": \"standard\",\n            \"price\": 10,\n            \"isActive\": true\n        }\n    ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/rooms/{{roomId}}/seats",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "rooms",
                    "{{roomId}}",
                    "seats"
                  ]
                },
                "description": "Update the seat layout for a specific room (admin only)"
              },
              "response": []
            },
            {
              "name": "Update Seat Status (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"isActive\": false\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/rooms/{{roomId}}/seats/{{seatId1}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "rooms",
                    "{{roomId}}",
                    "seats",
                    "{{seatId1}}"
                  ]
                },
                "description": "Update the status of a specific seat (admin only)"
              },
              "response": []
            },
            {
              "name": "Update Seat Type (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"type\": \"premium\",\n    \"price\": 15\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/rooms/{{roomId}}/seats/{{seatId1}}/type",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "rooms",
                    "{{roomId}}",
                    "seats",
                    "{{seatId1}}",
                    "type"
                  ]
                },
                "description": "Update the type and price of a specific seat (admin only)"
              },
              "response": []
            },
            {
              "name": "Bulk Update Seats (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"seatIds\": [\"{{seatId1}}\", \"{{seatId2}}\"],\n    \"updates\": {\n        \"type\": \"premium\",\n        \"price\": 15,\n        \"isActive\": true\n    }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/rooms/{{roomId}}/seats/bulk-update",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "rooms",
                    "{{roomId}}",
                    "seats",
                    "bulk-update"
                  ]
                },
                "description": "Update multiple seats at once (admin only)"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Room Maintenance",
          "description": "Endpoints for room maintenance",
          "item": [
            {
              "name": "Get Room Maintenance Schedule",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/rooms/{{roomId}}/maintenance",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "rooms",
                    "{{roomId}}",
                    "maintenance"
                  ]
                },
                "description": "Get the maintenance schedule for a specific room (admin only)"
              },
              "response": []
            },
            {
              "name": "Update Room Maintenance Schedule (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"lastMaintenance\": \"2023-01-15\",\n    \"nextMaintenance\": \"2023-07-15\",\n    \"notes\": \"Replaced projector bulb\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/rooms/{{roomId}}/maintenance",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "rooms",
                    "{{roomId}}",
                    "maintenance"
                  ]
                },
                "description": "Update the maintenance schedule for a specific room (admin only)"
              },
              "response": []
            },
            {
              "name": "Set Room Out of Service (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"isActive\": false,\n    \"reason\": \"Maintenance\",\n    \"startDate\": \"2023-06-01\",\n    \"endDate\": \"2023-06-03\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/rooms/{{roomId}}/out-of-service",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "rooms",
                    "{{roomId}}",
                    "out-of-service"
                  ]
                },
                "description": "Set a room as out of service for a specific period (admin only)"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Room Statistics",
          "description": "Endpoints for room statistics",
          "item": [
            {
              "name": "Get Room Statistics (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/rooms/{{roomId}}/statistics",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "rooms",
                    "{{roomId}}",
                    "statistics"
                  ]
                },
                "description": "Get statistics for a specific room (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Room Occupancy (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/rooms/{{roomId}}/occupancy?startDate={{date}}&endDate=2023-12-31",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "rooms",
                    "{{roomId}}",
                    "occupancy"
                  ],
                  "query": [
                    {
                      "key": "startDate",
                      "value": "{{date}}"
                    },
                    {
                      "key": "endDate",
                      "value": "2023-12-31"
                    }
                  ]
                },
                "description": "Get occupancy statistics for a specific room (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Room Revenue (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/rooms/{{roomId}}/revenue?startDate={{date}}&endDate=2023-12-31",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "rooms",
                    "{{roomId}}",
                    "revenue"
                  ],
                  "query": [
                    {
                      "key": "startDate",
                      "value": "{{date}}"
                    },
                    {
                      "key": "endDate",
                      "value": "2023-12-31"
                    }
                  ]
                },
                "description": "Get revenue statistics for a specific room (admin only)"
              },
              "response": []
            }
          ]
        }
      ]
    },
    {
      "name": "Screenings",
      "description": "API endpoints for screenings",
      "item": [
        {
          "name": "Authentication",
          "description": "Endpoints for user authentication (required for admin operations)",
          "item": [
            {
              "name": "Login Admin",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"password123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/login",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "login"
                  ]
                },
                "description": "Login as admin to get authentication token for protected screening operations"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Movies",
          "description": "Endpoints to get movie data for finding screenings",
          "item": [
            {
              "name": "Get Now Playing Movies",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/movies/status/Now Playing",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "movies",
                    "status",
                    "Now Playing"
                  ]
                },
                "description": "Get movies that are currently playing to find a movie ID for testing"
              },
              "response": []
            },
            {
              "name": "Get Movie by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/movies/{{movieId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "movies",
                    "{{movieId}}"
                  ]
                },
                "description": "Get details of a specific movie by ID"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Cinemas",
          "description": "Endpoints to get cinema data for finding screenings",
          "item": [
            {
              "name": "Get All Cinemas",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/cinemas",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "cinemas"
                  ]
                },
                "description": "Get a list of all cinemas"
              },
              "response": []
            },
            {
              "name": "Get Cinemas by City",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/cinemas/city/{{city}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "cinemas",
                    "city",
                    "{{city}}"
                  ]
                },
                "description": "Get cinemas in a specific city"
              },
              "response": []
            },
            {
              "name": "Get Cinemas by Movie and Date",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/cinemas/movie/{{movieId}}/date/{{date}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "cinemas",
                    "movie",
                    "{{movieId}}",
                    "date",
                    "{{date}}"
                  ]
                },
                "description": "Get cinemas showing a specific movie on a specific date"
              },
              "response": []
            },
            {
              "name": "Get Cinema by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/cinemas/{{cinemaId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "cinemas",
                    "{{cinemaId}}"
                  ]
                },
                "description": "Get details of a specific cinema by ID"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Screenings",
          "description": "Endpoints for screening operations",
          "item": [
            {
              "name": "Get All Screenings",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/screenings",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "screenings"
                  ]
                },
                "description": "Get a list of all screenings"
              },
              "response": []
            },
            {
              "name": "Get Screenings with Filters",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/screenings?movie={{movieId}}&cinema={{cinemaId}}&date={{date}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "screenings"
                  ],
                  "query": [
                    {
                      "key": "movie",
                      "value": "{{movieId}}"
                    },
                    {
                      "key": "cinema",
                      "value": "{{cinemaId}}"
                    },
                    {
                      "key": "date",
                      "value": "{{date}}"
                    }
                  ]
                },
                "description": "Get screenings filtered by movie, cinema, and/or date"
              },
              "response": []
            },
            {
              "name": "Get Screening by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/screenings/{{screeningId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "screenings",
                    "{{screeningId}}"
                  ]
                },
                "description": "Get details of a specific screening by ID"
              },
              "response": []
            },
            {
              "name": "Get Screenings by Movie and Date",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/screenings/movie/{{movieId}}/date/{{date}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "screenings",
                    "movie",
                    "{{movieId}}",
                    "date",
                    "{{date}}"
                  ]
                },
                "description": "Get all screenings for a specific movie on a specific date across all cinemas"
              },
              "response": []
            },
            {
              "name": "Get Screenings by Movie, Cinema and Date",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/screenings/movie/{{movieId}}/cinema/{{cinemaId}}/date/{{date}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "screenings",
                    "movie",
                    "{{movieId}}",
                    "cinema",
                    "{{cinemaId}}",
                    "date",
                    "{{date}}"
                  ]
                },
                "description": "Get screenings for a specific movie at a specific cinema on a specific date"
              },
              "response": []
            },
            {
              "name": "Get Available Seats for Screening",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/screenings/{{screeningId}}/seats",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "screenings",
                    "{{screeningId}}",
                    "seats"
                  ]
                },
                "description": "Get available seats for a specific screening"
              },
              "response": []
            },
            {
              "name": "Create Screening (Admin)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"movie_id\": \"{{movieId}}\",\n    \"cinema_id\": \"{{cinemaId}}\",\n    \"room_id\": \"{{roomId}}\",\n    \"date\": \"{{date}}T00:00:00.000Z\",\n    \"displayDate\": \"{{displayDate}}\",\n    \"startTime\": \"{{date}}T18:30:00.000Z\",\n    \"endTime\": \"{{date}}T20:45:00.000Z\",\n    \"displayTime\": \"6:30 PM\",\n    \"price\": 14.99,\n    \"format\": \"2D\",\n    \"language\": \"English\",\n    \"subtitles\": \"None\",\n    \"pricingTiers\": {\n        \"standard\": 14.99,\n        \"premium\": 19.99,\n        \"vip\": 24.99\n    },\n    \"totalSeats\": 120,\n    \"seatsAvailable\": 120,\n    \"isActive\": true,\n    \"status\": \"scheduled\",\n    \"bookingEnabled\": true,\n    \"dayOfWeek\": \"Monday\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/screenings",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "screenings"
                  ]
                },
                "description": "Create a new screening (admin only)"
              },
              "response": []
            },
            {
              "name": "Update Screening (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"startTime\": \"{{date}}T19:00:00.000Z\",\n    \"endTime\": \"{{date}}T21:15:00.000Z\",\n    \"displayTime\": \"7:00 PM\",\n    \"price\": 16.99,\n    \"status\": \"scheduled\",\n    \"bookingEnabled\": true\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/screenings/{{screeningId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "screenings",
                    "{{screeningId}}"
                  ]
                },
                "description": "Update an existing screening (admin only)"
              },
              "response": []
            },
            {
              "name": "Delete Screening (Admin)",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/screenings/{{screeningId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "screenings",
                    "{{screeningId}}"
                  ]
                },
                "description": "Delete a screening (admin only) - marks as inactive rather than deleting"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Legacy Showtimes",
          "description": "Legacy endpoints for showtime operations",
          "item": [
            {
              "name": "Get All Showtimes",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/showtimes",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "showtimes"
                  ]
                },
                "description": "Get a list of all showtimes (legacy endpoint)"
              },
              "response": []
            },
            {
              "name": "Get Showtime by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/showtimes/{{showtimeId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "showtimes",
                    "{{showtimeId}}"
                  ]
                },
                "description": "Get details of a specific showtime by ID (legacy endpoint)"
              },
              "response": []
            },
            {
              "name": "Get Showtimes by Movie and Date",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/showtimes/movie/{{movieId}}/date/{{date}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "showtimes",
                    "movie",
                    "{{movieId}}",
                    "date",
                    "{{date}}"
                  ]
                },
                "description": "Get all showtimes for a specific movie on a specific date across all theaters (legacy endpoint)"
              },
              "response": []
            },
            {
              "name": "Get Showtimes by Movie, Theater and Date",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/showtimes/movie/{{movieId}}/theater/{{theaterId}}/date/{{date}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "showtimes",
                    "movie",
                    "{{movieId}}",
                    "theater",
                    "{{theaterId}}",
                    "date",
                    "{{date}}"
                  ]
                },
                "description": "Get showtimes for a specific movie at a specific theater on a specific date (legacy endpoint)"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Booking Flow",
          "description": "Endpoints for the booking flow that use screenings",
          "item": [
            {
              "name": "Reserve Seats",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"seatIds\": [\"{{seatId1}}\", \"{{seatId2}}\"]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/screenings/{{screeningId}}/reserve",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "screenings",
                    "{{screeningId}}",
                    "reserve"
                  ]
                },
                "description": "Reserve seats for a specific screening (temporary hold)"
              },
              "response": []
            },
            {
              "name": "Release Seats",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"seatIds\": [\"{{seatId1}}\", \"{{seatId2}}\"]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/screenings/{{screeningId}}/release",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "screenings",
                    "{{screeningId}}",
                    "release"
                  ]
                },
                "description": "Release previously reserved seats"
              },
              "response": []
            },
            {
              "name": "Create Booking",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"screening\": \"{{screeningId}}\",\n    \"movie\": \"{{movieId}}\",\n    \"cinema\": \"{{cinemaId}}\",\n    \"room\": \"{{roomId}}\",\n    \"seats\": [\"{{seatId1}}\", \"{{seatId2}}\"],\n    \"totalPrice\": 30.00,\n    \"paymentMethod\": \"credit_card\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/bookings",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "bookings"
                  ]
                },
                "description": "Create a new booking with selected seats"
              },
              "response": []
            }
          ]
        }
      ]
    },
    {
      "name": "Seats",
      "description": "API endpoints for seats",
      "item": [
        {
          "name": "Authentication",
          "description": "Endpoints for user authentication",
          "item": [
            {
              "name": "Login",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"password123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/login",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "login"
                  ]
                },
                "description": "Login to get authentication token"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Seats",
          "description": "Endpoints for seat operations",
          "item": [
            {
              "name": "Get All Seats for Room",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/seats/room/{{roomId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "seats",
                    "room",
                    "{{roomId}}"
                  ]
                },
                "description": "Get all seats for a specific room"
              },
              "response": []
            },
            {
              "name": "Get Seat by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/seats/{{seatId1}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "seats",
                    "{{seatId1}}"
                  ]
                },
                "description": "Get details of a specific seat by ID"
              },
              "response": []
            },
            {
              "name": "Get Available Seats for Screening",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/seats/screening/{{screeningId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "seats",
                    "screening",
                    "{{screeningId}}"
                  ]
                },
                "description": "Get all available seats for a specific screening"
              },
              "response": []
            },
            {
              "name": "Get Seats by Type",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/seats/room/{{roomId}}/type/premium",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "seats",
                    "room",
                    "{{roomId}}",
                    "type",
                    "premium"
                  ]
                },
                "description": "Get all seats of a specific type in a room"
              },
              "response": []
            },
            {
              "name": "Create Seat (Admin)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"roomId\": \"{{roomId}}\",\n    \"row\": \"C\",\n    \"column\": 1,\n    \"seatNumber\": \"C1\",\n    \"type\": \"standard\",\n    \"price\": 10.00,\n    \"isActive\": true,\n    \"attributes\": {\n        \"isWheelchairAccessible\": false,\n        \"hasExtraLegroom\": false,\n        \"isCoupleSeat\": false\n    }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/seats",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "seats"
                  ]
                },
                "description": "Create a new seat (admin only)"
              },
              "response": []
            },
            {
              "name": "Update Seat (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"type\": \"premium\",\n    \"price\": 15.00,\n    \"isActive\": true,\n    \"attributes\": {\n        \"isWheelchairAccessible\": false,\n        \"hasExtraLegroom\": true,\n        \"isCoupleSeat\": false\n    }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/seats/{{seatId1}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "seats",
                    "{{seatId1}}"
                  ]
                },
                "description": "Update an existing seat (admin only)"
              },
              "response": []
            },
            {
              "name": "Delete Seat (Admin)",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/seats/{{seatId1}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "seats",
                    "{{seatId1}}"
                  ]
                },
                "description": "Delete a seat (admin only)"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Seat Layout",
          "description": "Endpoints for seat layout operations",
          "item": [
            {
              "name": "Get Room Seat Layout",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/seats/layout/room/{{roomId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "seats",
                    "layout",
                    "room",
                    "{{roomId}}"
                  ]
                },
                "description": "Get the seat layout for a specific room"
              },
              "response": []
            },
            {
              "name": "Create Room Seat Layout (Admin)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"roomId\": \"{{roomId}}\",\n    \"rows\": 10,\n    \"columns\": 15,\n    \"layout\": [\n        {\n            \"row\": \"A\",\n            \"column\": 1,\n            \"seatNumber\": \"A1\",\n            \"type\": \"standard\",\n            \"price\": 10.00,\n            \"isActive\": true,\n            \"attributes\": {\n                \"isWheelchairAccessible\": false,\n                \"hasExtraLegroom\": false,\n                \"isCoupleSeat\": false\n            }\n        },\n        {\n            \"row\": \"A\",\n            \"column\": 2,\n            \"seatNumber\": \"A2\",\n            \"type\": \"standard\",\n            \"price\": 10.00,\n            \"isActive\": true,\n            \"attributes\": {\n                \"isWheelchairAccessible\": false,\n                \"hasExtraLegroom\": false,\n                \"isCoupleSeat\": false\n            }\n        },\n        {\n            \"row\": \"B\",\n            \"column\": 1,\n            \"seatNumber\": \"B1\",\n            \"type\": \"premium\",\n            \"price\": 15.00,\n            \"isActive\": true,\n            \"attributes\": {\n                \"isWheelchairAccessible\": false,\n                \"hasExtraLegroom\": true,\n                \"isCoupleSeat\": false\n            }\n        },\n        {\n            \"row\": \"B\",\n            \"column\": 2,\n            \"seatNumber\": \"B2\",\n            \"type\": \"premium\",\n            \"price\": 15.00,\n            \"isActive\": true,\n            \"attributes\": {\n                \"isWheelchairAccessible\": false,\n                \"hasExtraLegroom\": true,\n                \"isCoupleSeat\": false\n            }\n        }\n    ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/seats/layout",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "seats",
                    "layout"
                  ]
                },
                "description": "Create a seat layout for a room (admin only)"
              },
              "response": []
            },
            {
              "name": "Update Room Seat Layout (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"rows\": 10,\n    \"columns\": 15,\n    \"updates\": [\n        {\n            \"row\": \"A\",\n            \"column\": 1,\n            \"type\": \"premium\",\n            \"price\": 15.00,\n            \"attributes\": {\n                \"hasExtraLegroom\": true\n            }\n        },\n        {\n            \"row\": \"A\",\n            \"column\": 2,\n            \"type\": \"premium\",\n            \"price\": 15.00,\n            \"attributes\": {\n                \"hasExtraLegroom\": true\n            }\n        }\n    ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/seats/layout/room/{{roomId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "seats",
                    "layout",
                    "room",
                    "{{roomId}}"
                  ]
                },
                "description": "Update the seat layout for a room (admin only)"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Seat Reservations",
          "description": "Endpoints for seat reservation operations",
          "item": [
            {
              "name": "Get Seat Reservation Status",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/seats/{{seatId1}}/reservation/screening/{{screeningId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "seats",
                    "{{seatId1}}",
                    "reservation",
                    "screening",
                    "{{screeningId}}"
                  ]
                },
                "description": "Get the reservation status of a seat for a specific screening"
              },
              "response": []
            },
            {
              "name": "Reserve Seats",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"screeningId\": \"{{screeningId}}\",\n    \"seatIds\": [\"{{seatId1}}\", \"{{seatId2}}\"],\n    \"reservationDuration\": 15\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/seats/reserve",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "seats",
                    "reserve"
                  ]
                },
                "description": "Reserve seats for a specific screening"
              },
              "response": []
            },
            {
              "name": "Release Seat Reservation",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/seats/reserve/{{reservationId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "seats",
                    "reserve",
                    "{{reservationId}}"
                  ]
                },
                "description": "Release a seat reservation"
              },
              "response": []
            },
            {
              "name": "Extend Seat Reservation",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"reservationId\": \"{{reservationId}}\",\n    \"extensionMinutes\": 5\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/seats/reserve/extend",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "seats",
                    "reserve",
                    "extend"
                  ]
                },
                "description": "Extend a seat reservation"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Seat Types",
          "description": "Endpoints for seat type operations",
          "item": [
            {
              "name": "Get All Seat Types",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/seats/types",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "seats",
                    "types"
                  ]
                },
                "description": "Get all seat types"
              },
              "response": []
            },
            {
              "name": "Create Seat Type (Admin)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"VIP\",\n    \"description\": \"VIP seats with extra legroom and reclining capability\",\n    \"basePrice\": 20.00,\n    \"color\": \"#FFD700\",\n    \"icon\": \"vip-seat-icon\",\n    \"attributes\": {\n        \"hasExtraLegroom\": true,\n        \"isReclining\": true,\n        \"hasTableService\": true\n    }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/seats/types",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "seats",
                    "types"
                  ]
                },
                "description": "Create a new seat type (admin only)"
              },
              "response": []
            },
            {
              "name": "Update Seat Type (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"VIP Plus\",\n    \"description\": \"VIP Plus seats with extra legroom, reclining capability, and complimentary snacks\",\n    \"basePrice\": 25.00,\n    \"attributes\": {\n        \"hasExtraLegroom\": true,\n        \"isReclining\": true,\n        \"hasTableService\": true,\n        \"hasComplimentarySnacks\": true\n    }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/seats/types/{{seatTypeId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "seats",
                    "types",
                    "{{seatTypeId}}"
                  ]
                },
                "description": "Update an existing seat type (admin only)"
              },
              "response": []
            },
            {
              "name": "Delete Seat Type (Admin)",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/seats/types/{{seatTypeId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "seats",
                    "types",
                    "{{seatTypeId}}"
                  ]
                },
                "description": "Delete a seat type (admin only)"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Seat Statistics",
          "description": "Endpoints for seat statistics",
          "item": [
            {
              "name": "Get Seat Occupancy Statistics (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/seats/statistics/occupancy/room/{{roomId}}?startDate={{date}}&endDate=2023-12-31",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "seats",
                    "statistics",
                    "occupancy",
                    "room",
                    "{{roomId}}"
                  ],
                  "query": [
                    {
                      "key": "startDate",
                      "value": "{{date}}"
                    },
                    {
                      "key": "endDate",
                      "value": "2023-12-31"
                    }
                  ]
                },
                "description": "Get seat occupancy statistics for a specific room (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Seat Type Popularity (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/seats/statistics/popularity/types?startDate={{date}}&endDate=2023-12-31",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "seats",
                    "statistics",
                    "popularity",
                    "types"
                  ],
                  "query": [
                    {
                      "key": "startDate",
                      "value": "{{date}}"
                    },
                    {
                      "key": "endDate",
                      "value": "2023-12-31"
                    }
                  ]
                },
                "description": "Get seat type popularity statistics (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Seat Revenue Statistics (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/seats/statistics/revenue?startDate={{date}}&endDate=2023-12-31",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "seats",
                    "statistics",
                    "revenue"
                  ],
                  "query": [
                    {
                      "key": "startDate",
                      "value": "{{date}}"
                    },
                    {
                      "key": "endDate",
                      "value": "2023-12-31"
                    }
                  ]
                },
                "description": "Get seat revenue statistics (admin only)"
              },
              "response": []
            }
          ]
        }
      ]
    },
    {
      "name": "Seats",
      "description": "API endpoints for seats",
      "item": [
        {
          "name": "Authentication",
          "description": "Endpoints for user authentication (required for some seat operations)",
          "item": [
            {
              "name": "Login User",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"testuser@example.com\",\n    \"password\": \"password123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/login",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "login"
                  ]
                },
                "description": "Login to get authentication token for seat reservation and booking"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Movies",
          "description": "Endpoints to get movie data for finding screenings",
          "item": [
            {
              "name": "Get Now Playing Movies",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/movies/status/Now Playing",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "movies",
                    "status",
                    "Now Playing"
                  ]
                },
                "description": "Get movies that are currently playing to find a movie ID for testing"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Cinemas",
          "description": "Endpoints to get cinema data for finding screenings",
          "item": [
            {
              "name": "Get Cinemas by Movie and Date",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/cinemas/movie/{{movieId}}/date/{{date}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "cinemas",
                    "movie",
                    "{{movieId}}",
                    "date",
                    "{{date}}"
                  ]
                },
                "description": "Get cinemas showing a specific movie on a specific date"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Screenings",
          "description": "Endpoints to get screening data for finding seats",
          "item": [
            {
              "name": "Get Screenings by Movie and Date",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/screenings/movie/{{movieId}}/date/{{date}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "screenings",
                    "movie",
                    "{{movieId}}",
                    "date",
                    "{{date}}"
                  ]
                },
                "description": "Get all screenings for a specific movie on a specific date across all cinemas"
              },
              "response": []
            },
            {
              "name": "Get Screenings by Movie, Cinema and Date",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/screenings/movie/{{movieId}}/cinema/{{cinemaId}}/date/{{date}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "screenings",
                    "movie",
                    "{{movieId}}",
                    "cinema",
                    "{{cinemaId}}",
                    "date",
                    "{{date}}"
                  ]
                },
                "description": "Get screenings for a specific movie at a specific cinema on a specific date"
              },
              "response": []
            },
            {
              "name": "Get Screening by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/screenings/{{screeningId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "screenings",
                    "{{screeningId}}"
                  ]
                },
                "description": "Get details of a specific screening by ID"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Seats",
          "description": "Endpoints for seat operations",
          "item": [
            {
              "name": "Get Available Seats (Screening)",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/screenings/{{screeningId}}/seats",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "screenings",
                    "{{screeningId}}",
                    "seats"
                  ]
                },
                "description": "Get available seats for a specific screening"
              },
              "response": []
            },
            {
              "name": "Get Available Seats (Showtime)",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/showtimes/{{showtimeId}}/seats",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "showtimes",
                    "{{showtimeId}}",
                    "seats"
                  ]
                },
                "description": "Get available seats for a specific showtime (legacy endpoint)"
              },
              "response": []
            },
            {
              "name": "Reserve Seats",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"seatIds\": [\"{{seatId1}}\", \"{{seatId2}}\"]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/screenings/{{screeningId}}/reserve",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "screenings",
                    "{{screeningId}}",
                    "reserve"
                  ]
                },
                "description": "Reserve seats for a specific screening (temporary hold)"
              },
              "response": []
            },
            {
              "name": "Release Seats",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"seatIds\": [\"{{seatId1}}\", \"{{seatId2}}\"]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/screenings/{{screeningId}}/release",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "screenings",
                    "{{screeningId}}",
                    "release"
                  ]
                },
                "description": "Release previously reserved seats"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Bookings",
          "description": "Endpoints for booking operations (which include seat selection)",
          "item": [
            {
              "name": "Create Booking",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"screening\": \"{{screeningId}}\",\n    \"movie\": \"{{movieId}}\",\n    \"cinema\": \"{{cinemaId}}\",\n    \"room\": \"{{roomId}}\",\n    \"seats\": [\"{{seatId1}}\", \"{{seatId2}}\"],\n    \"totalPrice\": 30.00,\n    \"paymentMethod\": \"credit_card\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/bookings",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "bookings"
                  ]
                },
                "description": "Create a new booking with selected seats"
              },
              "response": []
            },
            {
              "name": "Get User Bookings",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/bookings",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "bookings"
                  ]
                },
                "description": "Get all bookings for the current user (including seat information)"
              },
              "response": []
            },
            {
              "name": "Get Booking by ID",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/bookings/{{bookingId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "bookings",
                    "{{bookingId}}"
                  ]
                },
                "description": "Get details of a specific booking (including seat information)"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Cinema Rooms",
          "description": "Endpoints for cinema room operations (which include seat layouts)",
          "item": [
            {
              "name": "Get Cinema by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/cinemas/{{cinemaId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "cinemas",
                    "{{cinemaId}}"
                  ]
                },
                "description": "Get details of a specific cinema (including room and seat layout information)"
              },
              "response": []
            }
          ]
        }
      ]
    },
    {
      "name": "Showtimes",
      "description": "API endpoints for showtimes",
      "item": [
        {
          "name": "Authentication",
          "description": "Endpoints for user authentication",
          "item": [
            {
              "name": "Login",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"password123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/login",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "login"
                  ]
                },
                "description": "Login to get authentication token"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Showtimes",
          "description": "Endpoints for showtime operations",
          "item": [
            {
              "name": "Get All Showtimes",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/showtimes",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "showtimes"
                  ]
                },
                "description": "Get a list of all showtimes"
              },
              "response": []
            },
            {
              "name": "Get Showtimes with Pagination",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/showtimes?page=1&limit=10",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "showtimes"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "1"
                    },
                    {
                      "key": "limit",
                      "value": "10"
                    }
                  ]
                },
                "description": "Get a paginated list of showtimes"
              },
              "response": []
            },
            {
              "name": "Get Showtime by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/showtimes/{{showtimeId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "showtimes",
                    "{{showtimeId}}"
                  ]
                },
                "description": "Get details of a specific showtime by ID"
              },
              "response": []
            },
            {
              "name": "Get Showtimes by Movie",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/showtimes/movie/{{movieId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "showtimes",
                    "movie",
                    "{{movieId}}"
                  ]
                },
                "description": "Get all showtimes for a specific movie"
              },
              "response": []
            },
            {
              "name": "Get Showtimes by Theater",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/showtimes/theater/{{theaterId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "showtimes",
                    "theater",
                    "{{theaterId}}"
                  ]
                },
                "description": "Get all showtimes for a specific theater"
              },
              "response": []
            },
            {
              "name": "Get Showtimes by Date",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/showtimes/date/{{date}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "showtimes",
                    "date",
                    "{{date}}"
                  ]
                },
                "description": "Get all showtimes for a specific date"
              },
              "response": []
            },
            {
              "name": "Get Showtimes by Movie and Date",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/showtimes/movie/{{movieId}}/date/{{date}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "showtimes",
                    "movie",
                    "{{movieId}}",
                    "date",
                    "{{date}}"
                  ]
                },
                "description": "Get all showtimes for a specific movie on a specific date"
              },
              "response": []
            },
            {
              "name": "Get Showtimes by Theater and Date",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/showtimes/theater/{{theaterId}}/date/{{date}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "showtimes",
                    "theater",
                    "{{theaterId}}",
                    "date",
                    "{{date}}"
                  ]
                },
                "description": "Get all showtimes for a specific theater on a specific date"
              },
              "response": []
            },
            {
              "name": "Get Showtimes by Movie, Theater, and Date",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/showtimes/movie/{{movieId}}/theater/{{theaterId}}/date/{{date}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "showtimes",
                    "movie",
                    "{{movieId}}",
                    "theater",
                    "{{theaterId}}",
                    "date",
                    "{{date}}"
                  ]
                },
                "description": "Get all showtimes for a specific movie at a specific theater on a specific date"
              },
              "response": []
            },
            {
              "name": "Create Showtime (Admin)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"movieId\": \"{{movieId}}\",\n    \"theaterId\": \"{{theaterId}}\",\n    \"roomId\": \"{{roomId}}\",\n    \"date\": \"{{date}}\",\n    \"startTime\": \"19:30\",\n    \"endTime\": \"21:45\",\n    \"format\": \"2D\",\n    \"language\": \"English\",\n    \"price\": 12.50,\n    \"isActive\": true\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/showtimes",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "showtimes"
                  ]
                },
                "description": "Create a new showtime (admin only)"
              },
              "response": []
            },
            {
              "name": "Update Showtime (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"startTime\": \"20:00\",\n    \"endTime\": \"22:15\",\n    \"format\": \"3D\",\n    \"price\": 15.00,\n    \"isActive\": true\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/showtimes/{{showtimeId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "showtimes",
                    "{{showtimeId}}"
                  ]
                },
                "description": "Update an existing showtime (admin only)"
              },
              "response": []
            },
            {
              "name": "Delete Showtime (Admin)",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/showtimes/{{showtimeId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "showtimes",
                    "{{showtimeId}}"
                  ]
                },
                "description": "Delete a showtime (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Available Seats for Showtime",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/showtimes/{{showtimeId}}/seats",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "showtimes",
                    "{{showtimeId}}",
                    "seats"
                  ]
                },
                "description": "Get available seats for a specific showtime"
              },
              "response": []
            },
            {
              "name": "Check Showtime Availability",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/showtimes/{{showtimeId}}/availability",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "showtimes",
                    "{{showtimeId}}",
                    "availability"
                  ]
                },
                "description": "Check if a showtime is available (has seats)"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Showtime Schedules",
          "description": "Endpoints for managing showtime schedules",
          "item": [
            {
              "name": "Generate Weekly Schedule (Admin)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"movieId\": \"{{movieId}}\",\n    \"theaterId\": \"{{theaterId}}\",\n    \"roomId\": \"{{roomId}}\",\n    \"startDate\": \"{{date}}\",\n    \"endDate\": \"2023-12-31\",\n    \"showtimes\": [\n        {\n            \"time\": \"14:30\",\n            \"format\": \"2D\",\n            \"price\": 10.00,\n            \"daysOfWeek\": [1, 2, 3, 4, 5]\n        },\n        {\n            \"time\": \"19:00\",\n            \"format\": \"3D\",\n            \"price\": 15.00,\n            \"daysOfWeek\": [1, 2, 3, 4, 5, 6, 0]\n        },\n        {\n            \"time\": \"12:00\",\n            \"format\": \"2D\",\n            \"price\": 8.00,\n            \"daysOfWeek\": [6, 0]\n        }\n    ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/showtimes/schedule/generate",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "showtimes",
                    "schedule",
                    "generate"
                  ]
                },
                "description": "Generate a weekly schedule of showtimes (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Weekly Schedule",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/showtimes/schedule/week?startDate={{date}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "showtimes",
                    "schedule",
                    "week"
                  ],
                  "query": [
                    {
                      "key": "startDate",
                      "value": "{{date}}"
                    }
                  ]
                },
                "description": "Get the schedule for a week starting from a specific date"
              },
              "response": []
            },
            {
              "name": "Clear Schedule (Admin)",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"movieId\": \"{{movieId}}\",\n    \"theaterId\": \"{{theaterId}}\",\n    \"startDate\": \"{{date}}\",\n    \"endDate\": \"2023-12-31\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/showtimes/schedule/clear",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "showtimes",
                    "schedule",
                    "clear"
                  ]
                },
                "description": "Clear showtimes for a specific period (admin only)"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Showtime Statistics",
          "description": "Endpoints for showtime statistics",
          "item": [
            {
              "name": "Get Showtime Statistics (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/showtimes/statistics",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "showtimes",
                    "statistics"
                  ]
                },
                "description": "Get overall showtime statistics (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Showtime Statistics by Movie (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/showtimes/statistics/movie/{{movieId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "showtimes",
                    "statistics",
                    "movie",
                    "{{movieId}}"
                  ]
                },
                "description": "Get showtime statistics for a specific movie (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Showtime Statistics by Theater (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/showtimes/statistics/theater/{{theaterId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "showtimes",
                    "statistics",
                    "theater",
                    "{{theaterId}}"
                  ]
                },
                "description": "Get showtime statistics for a specific theater (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Showtime Statistics by Date Range (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/showtimes/statistics/date-range?startDate={{date}}&endDate=2023-12-31",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "showtimes",
                    "statistics",
                    "date-range"
                  ],
                  "query": [
                    {
                      "key": "startDate",
                      "value": "{{date}}"
                    },
                    {
                      "key": "endDate",
                      "value": "2023-12-31"
                    }
                  ]
                },
                "description": "Get showtime statistics for a specific date range (admin only)"
              },
              "response": []
            }
          ]
        }
      ]
    },
    {
      "name": "Theaters",
      "description": "API endpoints for theaters",
      "item": [
        {
          "name": "Authentication",
          "description": "Endpoints for user authentication",
          "item": [
            {
              "name": "Login",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"password123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/login",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "login"
                  ]
                },
                "description": "Login to get authentication token"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Theaters",
          "description": "Endpoints for theater operations",
          "item": [
            {
              "name": "Get All Theaters",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/theaters",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "theaters"
                  ]
                },
                "description": "Get a list of all theaters"
              },
              "response": []
            },
            {
              "name": "Get Theaters with Pagination",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/theaters?page=1&limit=10",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "theaters"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "1"
                    },
                    {
                      "key": "limit",
                      "value": "10"
                    }
                  ]
                },
                "description": "Get a paginated list of theaters"
              },
              "response": []
            },
            {
              "name": "Get Theater by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/theaters/{{theaterId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "theaters",
                    "{{theaterId}}"
                  ]
                },
                "description": "Get details of a specific theater by ID"
              },
              "response": []
            },
            {
              "name": "Get Theaters by City",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/theaters/city/{{city}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "theaters",
                    "city",
                    "{{city}}"
                  ]
                },
                "description": "Get all theaters in a specific city"
              },
              "response": []
            },
            {
              "name": "Get Theaters by Movie",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/theaters/movie/{{movieId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "theaters",
                    "movie",
                    "{{movieId}}"
                  ]
                },
                "description": "Get all theaters showing a specific movie"
              },
              "response": []
            },
            {
              "name": "Get Theaters by Movie and Date",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/theaters/movie/{{movieId}}/date/{{date}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "theaters",
                    "movie",
                    "{{movieId}}",
                    "date",
                    "{{date}}"
                  ]
                },
                "description": "Get all theaters showing a specific movie on a specific date"
              },
              "response": []
            },
            {
              "name": "Get Theaters by Location",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/theaters/location?latitude=40.7128&longitude=-74.0060&radius=10",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "theaters",
                    "location"
                  ],
                  "query": [
                    {
                      "key": "latitude",
                      "value": "40.7128"
                    },
                    {
                      "key": "longitude",
                      "value": "-74.0060"
                    },
                    {
                      "key": "radius",
                      "value": "10"
                    }
                  ]
                },
                "description": "Get theaters near a specific location"
              },
              "response": []
            },
            {
              "name": "Create Theater (Admin)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"AMC Empire 25\",\n    \"location\": {\n        \"address\": \"234 W 42nd St\",\n        \"city\": \"New York\",\n        \"state\": \"NY\",\n        \"zipCode\": \"10036\",\n        \"country\": \"USA\",\n        \"coordinates\": {\n            \"type\": \"Point\",\n            \"coordinates\": [-73.9896, 40.7569]\n        }\n    },\n    \"contactInfo\": {\n        \"phone\": \"+12123984970\",\n        \"email\": \"info@amcempire25.com\",\n        \"website\": \"https://www.amctheatres.com/movie-theatres/new-york-city/amc-empire-25\"\n    },\n    \"amenities\": [\"IMAX\", \"Dolby Cinema\", \"RealD 3D\", \"Wheelchair Accessible\"],\n    \"displayHours\": \"10:00 AM - 12:00 AM\",\n    \"images\": [\"https://example.com/theater1.jpg\", \"https://example.com/theater2.jpg\"],\n    \"featuredImage\": \"https://example.com/featured.jpg\",\n    \"isActive\": true,\n    \"isFeatured\": true\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/theaters",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "theaters"
                  ]
                },
                "description": "Create a new theater (admin only)"
              },
              "response": []
            },
            {
              "name": "Update Theater (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"AMC Empire 25 - Updated\",\n    \"contactInfo\": {\n        \"phone\": \"+12123984971\",\n        \"email\": \"updated@amcempire25.com\"\n    },\n    \"amenities\": [\"IMAX\", \"Dolby Cinema\", \"RealD 3D\", \"Wheelchair Accessible\", \"Recliner Seats\"],\n    \"isActive\": true,\n    \"isFeatured\": true\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/theaters/{{theaterId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "theaters",
                    "{{theaterId}}"
                  ]
                },
                "description": "Update an existing theater (admin only)"
              },
              "response": []
            },
            {
              "name": "Delete Theater (Admin)",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/theaters/{{theaterId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "theaters",
                    "{{theaterId}}"
                  ]
                },
                "description": "Delete a theater (admin only)"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Theater Rooms",
          "description": "Endpoints for managing theater rooms",
          "item": [
            {
              "name": "Get All Rooms in Theater",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/theaters/{{theaterId}}/rooms",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "theaters",
                    "{{theaterId}}",
                    "rooms"
                  ]
                },
                "description": "Get all rooms in a specific theater"
              },
              "response": []
            },
            {
              "name": "Get Room by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/theaters/rooms/{{roomId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "theaters",
                    "rooms",
                    "{{roomId}}"
                  ]
                },
                "description": "Get details of a specific room by ID"
              },
              "response": []
            },
            {
              "name": "Add Room to Theater (Admin)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"IMAX Theater\",\n    \"capacity\": 200,\n    \"type\": \"IMAX\",\n    \"seatLayout\": {\n        \"rows\": 10,\n        \"columns\": 20,\n        \"seats\": []\n    },\n    \"specialFeatures\": [\"Dolby Atmos\", \"Recliner Seats\"],\n    \"isActive\": true\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/theaters/{{theaterId}}/rooms",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "theaters",
                    "{{theaterId}}",
                    "rooms"
                  ]
                },
                "description": "Add a new room to a theater (admin only)"
              },
              "response": []
            },
            {
              "name": "Update Room (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"IMAX Theater - Updated\",\n    \"capacity\": 220,\n    \"type\": \"IMAX\",\n    \"specialFeatures\": [\"Dolby Atmos\", \"Recliner Seats\", \"4K Projection\"],\n    \"isActive\": true\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/theaters/rooms/{{roomId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "theaters",
                    "rooms",
                    "{{roomId}}"
                  ]
                },
                "description": "Update an existing room (admin only)"
              },
              "response": []
            },
            {
              "name": "Delete Room (Admin)",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/theaters/rooms/{{roomId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "theaters",
                    "rooms",
                    "{{roomId}}"
                  ]
                },
                "description": "Delete a room (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Room Seat Layout",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/theaters/rooms/{{roomId}}/seats",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "theaters",
                    "rooms",
                    "{{roomId}}",
                    "seats"
                  ]
                },
                "description": "Get the seat layout for a specific room"
              },
              "response": []
            },
            {
              "name": "Update Room Seat Layout (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"rows\": 10,\n    \"columns\": 20,\n    \"seats\": [\n        {\n            \"row\": \"A\",\n            \"column\": 1,\n            \"type\": \"standard\",\n            \"price\": 10,\n            \"isActive\": true\n        },\n        {\n            \"row\": \"A\",\n            \"column\": 2,\n            \"type\": \"standard\",\n            \"price\": 10,\n            \"isActive\": true\n        }\n    ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/theaters/rooms/{{roomId}}/seats",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "theaters",
                    "rooms",
                    "{{roomId}}",
                    "seats"
                  ]
                },
                "description": "Update the seat layout for a specific room (admin only)"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Theater Statistics",
          "description": "Endpoints for theater statistics",
          "item": [
            {
              "name": "Get Theater Statistics (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/theaters/statistics",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "theaters",
                    "statistics"
                  ]
                },
                "description": "Get overall theater statistics (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Theater Statistics by ID (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/theaters/{{theaterId}}/statistics",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "theaters",
                    "{{theaterId}}",
                    "statistics"
                  ]
                },
                "description": "Get statistics for a specific theater (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Theater Occupancy (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/theaters/{{theaterId}}/occupancy?startDate={{date}}&endDate=2023-12-31",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "theaters",
                    "{{theaterId}}",
                    "occupancy"
                  ],
                  "query": [
                    {
                      "key": "startDate",
                      "value": "{{date}}"
                    },
                    {
                      "key": "endDate",
                      "value": "2023-12-31"
                    }
                  ]
                },
                "description": "Get occupancy statistics for a specific theater (admin only)"
              },
              "response": []
            },
            {
              "name": "Get Theater Revenue (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/theaters/{{theaterId}}/revenue?startDate={{date}}&endDate=2023-12-31",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "theaters",
                    "{{theaterId}}",
                    "revenue"
                  ],
                  "query": [
                    {
                      "key": "startDate",
                      "value": "{{date}}"
                    },
                    {
                      "key": "endDate",
                      "value": "2023-12-31"
                    }
                  ]
                },
                "description": "Get revenue statistics for a specific theater (admin only)"
              },
              "response": []
            }
          ]
        }
      ]
    },
    {
      "name": "Users",
      "description": "API endpoints for users",
      "item": [
        {
          "name": "Authentication",
          "description": "Endpoints for user authentication",
          "item": [
            {
              "name": "Register User",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Test User\",\n    \"email\": \"testuser@example.com\",\n    \"password\": \"password123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/register",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "register"
                  ]
                },
                "description": "Register a new user"
              },
              "response": []
            },
            {
              "name": "Login User",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"testuser@example.com\",\n    \"password\": \"password123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/login",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "login"
                  ]
                },
                "description": "Login and get authentication token"
              },
              "response": []
            },
            {
              "name": "Login Admin",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"password123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/login",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "login"
                  ]
                },
                "description": "Login as admin and get authentication token"
              },
              "response": []
            },
            {
              "name": "Forgot Password",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"testuser@example.com\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/forgot-password",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "forgot-password"
                  ]
                },
                "description": "Request password reset email"
              },
              "response": []
            },
            {
              "name": "Reset Password",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"password\": \"newpassword123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/reset-password/{{resetToken}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "reset-password",
                    "{{resetToken}}"
                  ]
                },
                "description": "Reset password using token received via email"
              },
              "response": []
            }
          ]
        },
        {
          "name": "User Profile",
          "description": "Endpoints for user profile management",
          "item": [
            {
              "name": "Get User Profile",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/users/profile",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "profile"
                  ]
                },
                "description": "Get current user's profile"
              },
              "response": []
            },
            {
              "name": "Update User Profile",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Updated Name\",\n    \"email\": \"updated@example.com\",\n    \"phone\": \"1234567890\",\n    \"bio\": \"This is my updated bio\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/profile",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "profile"
                  ]
                },
                "description": "Update current user's profile"
              },
              "response": []
            },
            {
              "name": "Update Password",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"currentPassword\": \"password123\",\n    \"newPassword\": \"newpassword123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/password",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "password"
                  ]
                },
                "description": "Update user's password"
              },
              "response": []
            },
            {
              "name": "Upload Profile Picture",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "image",
                      "type": "file",
                      "src": "/path/to/profile-picture.jpg"
                    }
                  ]
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/profile-picture",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "profile-picture"
                  ]
                },
                "description": "Upload user profile picture"
              },
              "response": []
            }
          ]
        },
        {
          "name": "User Bookings",
          "description": "Endpoints for user booking management",
          "item": [
            {
              "name": "Get User Bookings",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/users/bookings",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "bookings"
                  ]
                },
                "description": "Get current user's booking history"
              },
              "response": []
            },
            {
              "name": "Create Booking",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"movie\": \"{{movieId}}\",\n    \"showtime\": \"{{showtimeId}}\",\n    \"seats\": [\"A1\", \"A2\"],\n    \"totalPrice\": 30.00,\n    \"paymentMethod\": \"credit_card\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/bookings",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "bookings"
                  ]
                },
                "description": "Create a new booking"
              },
              "response": []
            },
            {
              "name": "Get Booking by ID",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/bookings/{{bookingId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "bookings",
                    "{{bookingId}}"
                  ]
                },
                "description": "Get details of a specific booking"
              },
              "response": []
            },
            {
              "name": "Cancel Booking",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"reason\": \"Change of plans\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/bookings/{{bookingId}}/cancel",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "bookings",
                    "{{bookingId}}",
                    "cancel"
                  ]
                },
                "description": "Cancel a booking"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Two-Factor Authentication",
          "description": "Endpoints for two-factor authentication",
          "item": [
            {
              "name": "Setup 2FA",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/users/2fa/setup",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "2fa",
                    "setup"
                  ]
                },
                "description": "Set up two-factor authentication"
              },
              "response": []
            },
            {
              "name": "Verify and Enable 2FA",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"token\": \"123456\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/2fa/verify",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "2fa",
                    "verify"
                  ]
                },
                "description": "Verify and enable two-factor authentication"
              },
              "response": []
            },
            {
              "name": "Disable 2FA",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"token\": \"123456\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/2fa/disable",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "2fa",
                    "disable"
                  ]
                },
                "description": "Disable two-factor authentication"
              },
              "response": []
            },
            {
              "name": "Verify 2FA Token",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"userId\": \"{{userId}}\",\n    \"token\": \"123456\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/2fa/verify-token",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "2fa",
                    "verify-token"
                  ]
                },
                "description": "Verify a two-factor authentication token"
              },
              "response": []
            },
            {
              "name": "Generate New Backup Codes",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/users/2fa/backup-codes",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "2fa",
                    "backup-codes"
                  ]
                },
                "description": "Generate new backup codes for two-factor authentication"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Admin User Management",
          "description": "Endpoints for admin user management",
          "item": [
            {
              "name": "Get All Users (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/users",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users"
                  ]
                },
                "description": "Get a list of all users (admin only)"
              },
              "response": []
            },
            {
              "name": "Get User by ID (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/users/{{userId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "{{userId}}"
                  ]
                },
                "description": "Get details of a specific user (admin only)"
              },
              "response": []
            },
            {
              "name": "Update User (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Updated User Name\",\n    \"email\": \"updated@example.com\",\n    \"role\": \"editor\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/{{userId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "{{userId}}"
                  ]
                },
                "description": "Update a user (admin only)"
              },
              "response": []
            },
            {
              "name": "Delete User (Admin)",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/users/{{userId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "{{userId}}"
                  ]
                },
                "description": "Delete a user (admin only)"
              },
              "response": []
            },
            {
              "name": "Get All Bookings (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/bookings/admin",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "bookings",
                    "admin"
                  ]
                },
                "description": "Get a list of all bookings (admin only)"
              },
              "response": []
            }
          ]
        },
        {
          "name": "User Preferences",
          "description": "Endpoints for user preferences",
          "item": [
            {
              "name": "Update User Preferences",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"preferences\": {\n        \"favoriteGenres\": [\"Action\", \"Comedy\"],\n        \"preferredSeatingArea\": \"middle\",\n        \"preferredShowtimePeriod\": \"evening\"\n    }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/profile",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "profile"
                  ]
                },
                "description": "Update user preferences"
              },
              "response": []
            },
            {
              "name": "Add Movie to Watchlist",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"movieId\": \"{{movieId}}\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/watchlist",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "watchlist"
                  ]
                },
                "description": "Add a movie to user's watchlist"
              },
              "response": []
            },
            {
              "name": "Remove Movie from Watchlist",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/users/watchlist/{{movieId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "watchlist",
                    "{{movieId}}"
                  ]
                },
                "description": "Remove a movie from user's watchlist"
              },
              "response": []
            },
            {
              "name": "Add Favorite Movie",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"movieId\": \"{{movieId}}\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/favorites",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "favorites"
                  ]
                },
                "description": "Add a movie to user's favorites"
              },
              "response": []
            },
            {
              "name": "Remove Favorite Movie",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/users/favorites/{{movieId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    "favorites",
                    "{{movieId}}"
                  ]
                },
                "description": "Remove a movie from user's favorites"
              },
              "response": []
            }
          ]
        }
      ]
    }
  ]
}